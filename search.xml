<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[一人我饮酒醉]]></title>
    <url>%2Fposts%2Fea259480%2F</url>
    <content type="text"><![CDATA[var dplayer0 = new DPlayer({"element":document.getElementById("dplayer0"),"autoplay":0,"theme":"#FADFA3","loop":1,"video":{"url":"http://oybkqi1gi.bkt.clouddn.com/yirenyinjiu.mp4","pic":"http://oybkqi1gi.bkt.clouddn.com/yiren.png"}});]]></content>
      <categories>
        <category>视频</category>
      </categories>
      <tags>
        <tag>MV</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[纯代码实现侧边栏显示社交按钮组]]></title>
    <url>%2Fposts%2F5508299d%2F</url>
    <content type="text"><![CDATA[其实想要实现这个功能也是挺简单的，有两种办法! 方法1： 纯html代码实现(优点：添加很简单，只需把html代码粘贴到小工具中的文本中即可。缺点：更改相对麻烦）把下面内容改成自己的。 12345678&lt;div class="textwidget"&gt;&lt;a class="tweibo" style="padding-left: 12px;" href="http://wpa.qq.com/msgrd?v=3&amp;amp;uin=你的QQ号&amp;amp;site=qq&amp;amp;menu=yes" target="_blank" rel="external nofollow"&gt;&lt;i class="fa fa-qq"&gt;&lt;/i&gt; 在线服务&lt;/a&gt;&lt;a class="tweibo" style="padding-left: 12px;" href="http://weibo.com/你的微博" target="_blank" rel="external nofollow"&gt;&lt;i class="fa fa-weibo"&gt;&lt;/i&gt; 微博&lt;/a&gt;&lt;a class="tweibo" style="padding-left: 12px;" href="http://t.qq.com/你的企鹅微博" target="_blank" rel="external nofollow"&gt;&lt;i class="fa fa-tencent-weibo"&gt;&lt;/i&gt; 腾讯微博&lt;/a&gt;&lt;a class="rss" style="padding-left: 12px;" href="https://laod.cn/go?url=http://laid.cn/s/你的网址" target="_blank"&gt;&lt;i class="fa fa-paw"&gt;&lt;/i&gt; 百度口碑&lt;/a&gt;&lt;/div&gt; 方法2： 通过funtions增加自定义用户资料，然后通过函数调用。 先加代码到当前主题文件夹下的funtions.php中，代码如下： 12345678//自定义用户资料add_filter( 'user_contactmethods', 'yeziting_add_contact_fields' );function yeziting_add_contact_fields( $contactmethods ) &#123;$contactmethods['qq'] = 'QQ';$contactmethods['qq_weibo'] = '腾讯微博';$contactmethods['sina_weibo'] = '新浪微博';$contactmethods['donate'] = '百度口碑';&#125; 然后再加代码到sidebar.php文件中。代码如下。（修改的话直接进后台的个人资料中填写。QQ直接写QQ号即可。微博：http://weibo.com/你的微博地址。腾讯微博同样如此，百度口碑写自己的网址即。 12345&lt;div class="textwidget"&gt;&lt;a class="tweibo" style="padding-left: 12px;" href="http://wpa.qq.com/msgrd?v=3&amp;amp;uin=&amp;lt;?php the_author_meta( 'qq' );?&amp;gt;&amp;amp;site=qq&amp;amp;menu=yes" target="_blank" rel="external nofollow"&gt;&lt;i class="fa fa-qq"&gt;&lt;/i&gt; QQ交谈&lt;/a&gt; &lt;a class="tweibo" style="padding-left: 12px;" href="&amp;quot;http://weibo.com/&amp;lt;?php"&gt;"target="_blank" rel="external nofollow"&amp;gt;&lt;i class="fa fa-weibo"&gt;&lt;/i&gt; 微博&lt;/a&gt; &lt;a class="tweibo" style="padding-left: 12px;" href="http://t.qq.com/&amp;lt;?php the_author_meta( 'qq_weibo' );?&amp;gt;" target="_blank" rel="external nofollow"&gt;&lt;i class="fa fa-tencent-weibo"&gt;&lt;/i&gt; 腾讯微博&lt;/a&gt; style="padding-left: 12px;" href="http://koubei.baidu.com/s/&lt;!--?php the_author_meta( 'donate' );?--&gt;" target="_blank"&amp;gt;&lt;i class="fa fa-paw"&gt;&lt;/i&gt; 百度口碑&lt;/div&gt; CSS代码： 12345678910.textwidget &#123;padding: 15px;color: #777;&#125;.textwidget a &#123;color: #777;&#125;.textwidget a:hover &#123;color: #45B6F7;&#125;]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>按钮</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[19款前端常用插件]]></title>
    <url>%2Fposts%2F9ce98624%2F</url>
    <content type="text"><![CDATA[jQuery内容滚动插件-BoxSlider jQuery artDialog对话框插件 移动端日期选择组件 图像延迟加载库Echo.js 轮播图FlexSlider插件 Slick.js幻灯片使用方法 JavaScript响应式轮播图插件–Flickity Intro.js 分步向导插件使用方法 ScrollReveal-元素随页面滚动产生动画的js插件 支持移动触摸的jQuery图片Lightbox插件 Owl Carousel幻灯片插件 kissui.scrollanim页面滚动动画库插件 jQuery cxSelect 联动下拉菜单 jQuery cxCalendar 日期选择器 jQuery Transit 过渡效果插件 lightslider-支持移动触摸的轻量级jQuery幻灯片插件 WOW.js滚动页面产生动画 FullPage.js全屏插件 animate.css动画库]]></content>
      <categories>
        <category>H5</category>
      </categories>
      <tags>
        <tag>H5</tag>
        <tag>插件</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Git常用命令]]></title>
    <url>%2Fposts%2Fcaff8000%2F</url>
    <content type="text"><![CDATA[几个专用名词的译名如下： Workspace：工作区 Index / Stage：暂存区 Repository：仓库区（或本地仓库） Remote：远程仓库 新建代码库123456# 在当前目录新建一个Git代码库$ git init# 新建一个目录，将其初始化为Git代码库$ git init [project-name]# 下载一个项目和它的整个代码历史$ git clone [url] 配置Git的设置文件为.gitconfig，它可以在用户主目录下（全局配置），也可以在项目目录下（项目配置） 1234567# 显示当前的Git配置$ git config --list# 编辑Git配置文件$ git config -e [--global]# 设置提交代码时的用户信息$ git config [--global] user.name "[name]"$ git config [--global] user.email "[email address]" 增加/删除文件123456789101112131415# 添加指定文件到暂存区$ git add [file1] [file2] ...# 添加指定目录到暂存区，包括子目录$ git add [dir]# 添加当前目录的所有文件到暂存区$ git add .# 添加每个变化前，都会要求确认# 对于同一个文件的多处变化，可以实现分次提交$ git add -p# 删除工作区文件，并且将这次删除放入暂存区$ git rm [file1] [file2] ...# 停止追踪指定文件，但该文件会保留在工作区$ git rm --cached [file]# 改名文件，并且将这个改名放入暂存区[b]$ git mv [file-original] [file-renamed] 代码提交[/b]12345678910111213# 提交暂存区到仓库区$ git commit -m [message]# 提交暂存区的指定文件到仓库区$ git commit [file1] [file2] ... -m [message]# 提交工作区自上次commit之后的变化，直接到仓库区$ git commit -a# 提交时显示所有diff信息$ git commit -v# 使用一次新的commit，替代上一次提交# 如果代码没有任何新变化，则用来改写上一次commit的提交信息$ git commit --amend -m [message]# 重做上一次commit，并包括指定文件的新变化$ git commit --amend [file1] [file2] ... 分支1234567891011121314151617181920212223242526272829# 列出所有本地分支$ git branch# 列出所有远程分支$ git branch -r# 列出所有本地分支和远程分支$ git branch -a# 新建一个分支，但依然停留在当前分支$ git branch [branch-name]# 新建一个分支，并切换到该分支$ git checkout -b [branch]# 新建一个分支，指向指定commit$ git branch [branch] [commit]# 新建一个分支，与指定的远程分支建立追踪关系$ git branch --track [branch] [remote-branch]# 切换到指定分支，并更新工作区$ git checkout [branch-name]# 切换到上一个分支$ git checkout -# 建立追踪关系，在现有分支与指定的远程分支之间$ git branch --set-upstream [branch] [remote-branch]# 合并指定分支到当前分支$ git merge [branch]# 选择一个commit，合并进当前分支$ git cherry-pick [commit]# 删除分支$ git branch -d [branch-name]# 删除远程分支$ git push origin --delete [branch-name]$ git branch -dr [remote/branch] 标签123456789101112131415161718# 列出所有tag$ git tag# 新建一个tag在当前commit$ git tag [tag]# 新建一个tag在指定commit$ git tag [tag] [commit]# 删除本地tag$ git tag -d [tag]# 删除远程tag$ git push origin :refs/tags/[tagName]# 查看tag信息$ git show [tag]# 提交指定tag$ git push [remote] [tag]# 提交所有tag$ git push [remote] --tags# 新建一个分支，指向某个tag$ git checkout -b [branch] [tag] 查看信息1234567891011121314151617181920212223242526272829303132333435363738394041# 显示有变更的文件$ git status# 显示当前分支的版本历史$ git log# 显示commit历史，以及每次commit发生变更的文件$ git log --stat# 搜索提交历史，根据关键词$ git log -S [keyword]# 显示某个commit之后的所有变动，每个commit占据一行$ git log [tag] HEAD --pretty=format:%s# 显示某个commit之后的所有变动，其"提交说明"必须符合搜索条件$ git log [tag] HEAD --grep feature# 显示某个文件的版本历史，包括文件改名$ git log --follow [file]$ git whatchanged [file]# 显示指定文件相关的每一次diff$ git log -p [file]# 显示过去5次提交$ git log -5 --pretty --oneline# 显示所有提交过的用户，按提交次数排序$ git shortlog -sn# 显示指定文件是什么人在什么时间修改过$ git blame [file]# 显示暂存区和工作区的差异$ git diff# 显示暂存区和上一个commit的差异$ git diff --cached [file]# 显示工作区与当前分支最新commit之间的差异$ git diff HEAD# 显示两次提交之间的差异$ git diff [first-branch]...[second-branch]# 显示今天你写了多少行代码$ git diff --shortstat "@&#123;0 day ago&#125;"# 显示某次提交的元数据和内容变化$ git show [commit]# 显示某次提交发生变化的文件$ git show --name-only [commit]# 显示某次提交时，某个文件的内容$ git show [commit]:[filename]# 显示当前分支的最近几次提交$ git reflog 远程同步12345678910111213141516# 下载远程仓库的所有变动$ git fetch [remote]# 显示所有远程仓库$ git remote -v# 显示某个远程仓库的信息$ git remote show [remote]# 增加一个新的远程仓库，并命名$ git remote add [shortname] [url]# 取回远程仓库的变化，并与本地分支合并$ git pull [remote] [branch]# 上传本地指定分支到远程仓库$ git push [remote] [branch]# 强行推送当前分支到远程仓库，即使有冲突$ git push [remote] --force# 推送所有分支到远程仓库$ git push [remote] --all 撤销12345678910111213141516171819202122# 恢复暂存区的指定文件到工作区$ git checkout [file]# 恢复某个commit的指定文件到暂存区和工作区$ git checkout [commit] [file]# 恢复暂存区的所有文件到工作区$ git checkout .# 重置暂存区的指定文件，与上一次commit保持一致，但工作区不变$ git reset [file]# 重置暂存区与工作区，与上一次commit保持一致$ git reset --hard# 重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变$ git reset [commit]# 重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致$ git reset --hard [commit]# 重置当前HEAD为指定commit，但保持暂存区和工作区不变$ git reset --keep [commit]# 新建一个commit，用来撤销指定commit# 后者的所有变化都将被前者抵消，并且应用到当前分支$ git revert [commit]# 暂时将未提交的变化移除，稍后再移入$ git stash$ git stash pop 其他1$ git archive]]></content>
      <categories>
        <category>Git</category>
      </categories>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[10种实用的CSS鼠标滑过按钮特效]]></title>
    <url>%2Fposts%2F936d8fb1%2F</url>
    <content type="text"><![CDATA[1234567891011121314151617181920212223242526272829303132&lt;!DOCTYPE html&gt;&lt;html lang="en"&gt;&lt;head&gt; &lt;meta charset="UTF-8" /&gt; &lt;title&gt;login&lt;/title&gt; &lt;style type="text/css" media="screen"&gt; /* 公用样式 */ body&#123; margin:0; height: 0; background-color: #F1F1F1; &#125; .warp&#123; width: 250px; height: 150px; background-color: #5e7c87; float:left; margin:15px 15px; box-shadow: 10px 10px 5px #888888; &#125; .sim-button&#123; line-height: 50px; height: 50px; text-align: center; margin-right: auto; margin-left: auto; margin-top: 50px; width: 60%; cursor: pointer; color: rgba(255,255,255,1); border: 1px solid rgba(255,255,255,0.5); &#125; 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320321322323324325326327328329330331332333334335336337338339340341342343344345346347348349350351352353354355356357358359360361362363364365366367368369370371372373374375376377378379380381382383384385386387388389390391392393394395396397398399400401402403404405406407408409410411412413414415416417418419420421422423424425426427428429430431432433434435436437438439440441442443444445446447448449450451452453454455456457458459460461 /* 效果一 */ .button1&#123; -webkit-transition: all 0.5s ; transition: all 0.5s ; &#125; .button1:hover&#123; background-color: rgba(255,255,255,0.2); border-radius:20px; &#125; /* 效果2 */ .button2&#123; -webkit-transition: all 0.5s ; transition: all 0.5s ; overflow:hidden; position: relative; &#125; .button2:hover&#123; background-color: rgba(255,255,255,0.2); &#125; .button2&gt;span&#123; -webkit-transition: all 0.3s ; transition: all 0.3s ; &#125; .button2:hover&gt;span&#123; opacity:0; &#125; .button2::after&#123; content:attr(data-text); width: 100%; height: 100%; position: absolute; left: -50px; top: 0; opacity:0; -webkit-transition: all 0.5s ; transition: all 0.5s ; &#125; .button2:hover::after&#123; left:0; opacity:1; &#125; /* 效果三 */ .button3&#123; -webkit-transition: all 0.5s ; transition: all 0.5s ; overflow:hidden; position: relative; &#125; .button3:hover&#123; background-color: rgba(255,255,255,0.2); &#125; .button3&gt;span&#123; -webkit-transition: all 0.3s ; transition: all 0.3s ; &#125; .button3:hover&gt;span&#123; opacity:0; &#125; .button3::after&#123; content:attr(data-text); width: 100%; height: 100%; position: absolute; left: 0; top: 0; opacity:0; -webkit-transform: translate(-9%, -50%) rotate(-9deg); transform: translate(-9%, -50%) rotate(-9deg); -webkit-transition: all 0.3s ; transition: all 0.3s ; &#125; .button3:hover::after&#123; -webkit-transform: translate(0, 0) rotate(0deg); transform: translate(0, 0) rotate(0deg); opacity:1; &#125; /* 效果四 */ .button4&#123; position: relative; overflow:hidden; &#125; .button4 span&#123; z-index:2; &#125; .button4::after&#123; content:""; width: 100%; height: 100%; z-index:1; opacity:0; position: absolute; left: 0; top:0; background-color: rgba(255,255,255,0.5); -webkit-transition: all 0.5s ; transition: all 0.5s ; &#125; .button4:hover::after&#123; opacity:1; -webkit-transform: skewX(-180deg) scale(0.5,1); transform: skewX(-180deg) scale(0.5,1); &#125; /* 效果五 */ .button5&#123; border:none; position: relative; &#125; .button5::before&#123; content: ''; position: absolute; left: 0; top: 0; width: 100%; height: 100%; border: 1px solid rgba(255,255,255,0.5); -webkit-transition: all 0.5s ; transition: all 0.5s ; &#125; .button5:hover::before&#123; opacity:0; -webkit-transform: scale(1.2,1.2); transform: scale(1.2,1.2); &#125; .button5::after&#123; content:''; width:100%; height:100%; position: absolute; left: 0; top: 0; opacity:0; background-color: rgba(255,255,255,0.5); -webkit-transform: scale(0.5,0.5); transform: scale(0.5,0.5); -webkit-transition: all 0.5s ; transition: all 0.5s ; &#125; .button5:hover::after&#123; opacity:1; -webkit-transform: scale(1,1); transform: scale(1,1); &#125; /* 效果六 */ .button6&#123; border:none; position: relative; &#125; .button6::before&#123; content: ''; position: absolute; left: 0; top: 0; width: 100%; height: 100%; background-color: rgba(255,255,255,0.5); -webkit-transition: all 0.5s ; transition: all 0.5s ; &#125; .button6:hover::before&#123; opacity:0; -webkit-transform: scale(0.5,0.5); transform: scale(0.5,0.5); &#125; .button6::after&#123; content:''; width:100%; height:100%; position: absolute; left: 0; top: 0; opacity:0; border: 1px solid rgba(255,255,255,0.5); -webkit-transform: scale(1.2,1.2); transform: scale(1.2,1.2); -webkit-transition: all 0.5s ; transition: all 0.5s ; &#125; .button6:hover::after&#123; opacity:1; -webkit-transform: scale(1,1); transform: scale(1,1); &#125; /* 效果七 27*/ .button7&#123; border: 1px solid rgba(255,255,255,0.5); -webkit-transition: all 0.5s ; transition: all 0.5s ; overflow:hidden; position: relative; &#125; .button7:hover&#123; border: 1px solid rgba(255,255,255,0); &#125; .button7::before&#123; content: ''; position: absolute; left: 0; bottom: 0; width: 100%; height: 1px; background-color: rgba(255,255,255,0.5); -webkit-transform: translate(-100%, -600%) rotate(9deg); transform: translate(-100%, -600%) rotate(9deg); -webkit-transition-timing-function: cubic-bezier(0.75, 0, 0.125, 1); transition-timing-function: cubic-bezier(0.75, 0, 0.125, 1); -webkit-transition: all 0.5s ; transition: all 0.5s ; &#125; .button7:hover::before&#123; -webkit-transform: translate(0,0); transform: translate(0,0); &#125; /* 效果八 */ .button8&#123; color:rgba(255,255,255,1); border:none; position: relative; &#125; .button8:hover&gt;span&#123; letter-spacing: 2px; &#125; .button8::before&#123; content:''; position: absolute; left: 0; top: 0; width: 100%; height: 100%; z-index: 1; opacity: 0; -webkit-transition: all 0.3s; transition: all 0.3s; border-top-width: 1px; border-bottom-width: 1px; border-top-style: solid; border-bottom-style: solid; border-top-color: rgba(255,255,255,0.5); border-bottom-color: rgba(255,255,255,0.5); -webkit-transform: scale(0.1, 1); transform: scale(0.1, 1); &#125; .button8:hover::before&#123; opacity: 1; -webkit-transform: scale(1, 1); transform: scale(1, 1); &#125; .button8::after&#123; content: ''; position: absolute; left: 0; top: 0; width: 100%; height:100%; z-index:1; background-color: rgba(255,255,255,0.25); -webkit-transition: all 0.3s; transition: all 0.3s; &#125; .button8:hover::after&#123; opacity:0; -webkit-transform: scale(0.1, 1); transform: scale(0.1, 1); &#125; /* 效果九 */ .button9&#123; color: rgba(255,255,255,1); border:none; position: relative; border-top-width: 1px; border-bottom-width: 1px; border-top-style: solid; border-bottom-style: solid; border-top-color: rgba(255,255,255,0.5); border-bottom-color: rgba(255,255,255,0.5); -webkit-transition: all 0.3s; transition: all 0.3s; &#125; .button9:hover span&#123; letter-spacing: 2px; &#125; .button9:hover&#123; border-top-color: rgba(255,255,255,0); border-bottom-color: rgba(255,255,255,0); &#125; .button9::before&#123; content: ''; position: absolute; top: 0; right: 0; width: 1px; height: 100%; z-index: 1; -webkit-transition: all 0.3s; transition: all 0.3s; background-color: rgba(255,255,255,0.5); &#125; .button9:hover::before&#123; -webkit-transform: translate(-76px,0) rotate(270deg); transform: translate(-76px,0) rotate(270deg); &#125; .button9::after&#123; content: ''; position: absolute; top: 0; left: 0; width: 1px; height: 100%; z-index: 1; -webkit-transition: all 0.3s; transition: all 0.3s; background-color: rgba(255,255,255,0.5); &#125; .button9:hover::after&#123; -webkit-transform: translate(76px,0) rotate(180deg); transform: translate(76px,0) rotate(180deg); &#125; /* 效果十 */ .button10&#123; -webkit-transition: all 0.3s; transition: all 0.3s; &#125; .button10:hover&#123; -webkit-animation-name: move; animation-name: move; -webkit-animation-duration: 1s; animation-duration: 1s; -webkit-animation-fill-mode: both; animation-fill-mode: both; background-color: rgba(255,255,255,0.2); &#125; @-webkit-keyframes move &#123; from, 11.1%, to &#123; -webkit-transform: none; transform: none; &#125; 22.2% &#123; -webkit-transform: skewX(-12.5deg) skewY(-12.5deg); transform: skewX(-12.5deg) skewY(-12.5deg); &#125; 33.3% &#123; -webkit-transform: skewX(6.25deg) skewY(6.25deg); transform: skewX(6.25deg) skewY(6.25deg); &#125; 44.4% &#123; -webkit-transform: skewX(-3.125deg) skewY(-3.125deg); transform: skewX(-3.125deg) skewY(-3.125deg); &#125; 55.5% &#123; -webkit-transform: skewX(1.5625deg) skewY(1.5625deg); transform: skewX(1.5625deg) skewY(1.5625deg); &#125; 66.6% &#123; -webkit-transform: skewX(-0.78125deg) skewY(-0.78125deg); transform: skewX(-0.78125deg) skewY(-0.78125deg); &#125; 77.7% &#123; -webkit-transform: skewX(0.390625deg) skewY(0.390625deg); transform: skewX(0.390625deg) skewY(0.390625deg); &#125; 88.8% &#123; -webkit-transform: skewX(-0.1953125deg) skewY(-0.1953125deg); transform: skewX(-0.1953125deg) skewY(-0.1953125deg); &#125; &#125; @keyframes move &#123; from, 11.1%, to &#123; -webkit-transform: none; transform: none; &#125; 22.2% &#123; -webkit-transform: skewX(-12.5deg) skewY(-12.5deg); transform: skewX(-12.5deg) skewY(-12.5deg); &#125; 33.3% &#123; -webkit-transform: skewX(6.25deg) skewY(6.25deg); transform: skewX(6.25deg) skewY(6.25deg); &#125; 44.4% &#123; -webkit-transform: skewX(-3.125deg) skewY(-3.125deg); transform: skewX(-3.125deg) skewY(-3.125deg); &#125; 55.5% &#123; -webkit-transform: skewX(1.5625deg) skewY(1.5625deg); transform: skewX(1.5625deg) skewY(1.5625deg); &#125; 66.6% &#123; -webkit-transform: skewX(-0.78125deg) skewY(-0.78125deg); transform: skewX(-0.78125deg) skewY(-0.78125deg); &#125; 77.7% &#123; -webkit-transform: skewX(0.390625deg) skewY(0.390625deg); transform: skewX(0.390625deg) skewY(0.390625deg); &#125; 88.8% &#123; -webkit-transform: skewX(-0.1953125deg) skewY(-0.1953125deg); transform: skewX(-0.1953125deg) skewY(-0.1953125deg); &#125; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div class="warp"&gt; &lt;div class="sim-button button1"&gt; &lt;span&gt;login1&lt;/span&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="warp"&gt; &lt;div class="sim-button button2" data-text="login2"&gt; &lt;span&gt;login2&lt;/span&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="warp"&gt; &lt;div class="sim-button button3" data-text="login3"&gt; &lt;span&gt;login3&lt;/span&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="warp"&gt; &lt;div class="sim-button button4"&gt; &lt;span&gt;login4&lt;/span&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="warp"&gt; &lt;div class="sim-button button5"&gt; &lt;span&gt;login5&lt;/span&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="warp"&gt; &lt;div class="sim-button button6"&gt; &lt;span&gt;login6&lt;/span&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="warp"&gt; &lt;div class="sim-button button7"&gt; &lt;span&gt;login7&lt;/span&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="warp"&gt; &lt;div class="sim-button button8"&gt; &lt;span&gt;login8&lt;/span&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="warp"&gt; &lt;div class="sim-button button9"&gt; &lt;span&gt;login9&lt;/span&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="warp"&gt; &lt;div class="sim-button button10"&gt; &lt;span&gt;login10&lt;/span&gt; &lt;/div&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt;]]></content>
      <categories>
        <category>css</category>
        <category>H5</category>
      </categories>
      <tags>
        <tag>css</tag>
        <tag>按钮特效</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Markdown基本语法]]></title>
    <url>%2Fposts%2F5d36ff15%2F</url>
    <content type="text"><![CDATA[特殊字符之所以把特殊字符放到最前面,就是因为Markdown对特殊字符处理不是很友好,很容易出现很奇怪的异常,其实就是因为文章中包含了特殊字符无法编译通过，所以导致Hexo无法渲染 .下面是比较常见的几个: 12345678910111213141516171819202122! &amp;#33; — 惊叹号Exclamation mark” &amp;#34; &amp;quot; 双引号Quotation mark# &amp;#35; — 数字标志Number sign$ &amp;#36; — 美元标志Dollar sign% &amp;#37; — 百分号Percent sign&amp; &amp;#38; &amp;amp; Ampersand‘ &amp;#39; — 单引号Apostrophe( &amp;#40; — 小括号左边部分Left parenthesis) &amp;#41; — 小括号右边部分Right parenthesis* &amp;#42; — 星号Asterisk+ &amp;#43; — 加号Plus sign&lt; &amp;#60; &amp;lt; 小于号Less than= &amp;#61; — 等于符号Equals sign&gt; &amp;#62; &amp;gt; 大于号Greater than? &amp;#63; — 问号Question mark@ &amp;#64; — Commercial at[ &amp;#91; --- 中括号左边部分Left square bracket\ &amp;#92; --- 反斜杠Reverse solidus (backslash)] &amp;#93; — 中括号右边部分Right square bracket&#123; &amp;#123; — 大括号左边部分Left curly brace| &amp;#124; — 竖线Vertical bar&#125; &amp;#125; — 大括号右边部分Right curly brace 特别注意的是小括号 ( ) 大括号 { } ,如果不小心写了,你执行hexo s –debug可能报一些莫名其妙的错误! 更多特殊字符转义的内容 标题在文字前加上#号1234567891011# 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题大标题=小标题- 粗体斜体123*斜体文本* _斜体文本_**粗体文本** __粗体文本__***粗斜体文本*** ___粗斜体文本___ 预览效果：斜体文本 斜体文本粗体文本 粗体文本粗斜体文本 粗斜体文本 链接123456789101112常用链接方法文字链接 [链接名称](https://friendship328.github.io/)网址链接 &lt;https://friendship328.github.io/&gt;高级链接技巧这个链接用 1 作为网址变量 [Google][1].这个链接用 yahoo 作为网址变量 [Yahoo!][yahoo].然后在文档的结尾为变量赋值（网址） [1]: http://www.google.com/ [yahoo]: http://www.yahoo.com/ 预览效果：文字链接 链接名称网址链接 https://friendship328.github.io/ 高级链接技巧这个链接用 1 作为网址变量 Google.这个链接用 yahoo 作为网址变量 Yahoo!. 列表123- 列表文本前使用 [减号+空格]+ 列表文本前使用 [加号+空格]* 列表文本前使用 [星号+空格] 普通有序列表1231. 列表前使用 [数字+空格]2. 我们会自动帮你添加数字7. 不用担心数字不对，显示的时候我们会自动把这行的 7 纠正为 3 列表嵌套12345678910111. 列出所有元素： - 无序列表元素 A 1. 元素 A 的有序子列表 - 前面加四个空格2. 列表里的多段换行： 前面必须加四个空格， 这样换行，整体的格式不会乱3. 列表里引用： &gt; 前面空一行 &gt; 仍然需要在 &gt; 前面加四个空格 引用普通引用12&gt; 引用文本前使用 [大于号+空格]&gt; 折行可以不加，新起一行都要加上哦 引用里嵌套引用123&gt; 最外层引用&gt; &gt; 多一个 &gt; 嵌套一层引用&gt; &gt; &gt; 可以嵌套很多层 引用里嵌套列表123&gt; - 这是引用里嵌套的一个列表&gt; - 还可以有子列表&gt; * 子列表需要从 - 之后延后四个空格开始 图片跟链接的方法区别在于前面加了个感叹号!，这样是不是觉得好记多了呢? 12345678![图片名称](http: //图片地址)当然，你也可以像网址那样对图片网址使用变量这个链接用 1 作为网址变量 [ Google] [ 1].然后在文档的结尾位变量赋值(网址)[1]: http: //www.google.com/logo.png也可以使用 HTML 的图片语法来自定义图片的宽高大小 换行如果另起一行，只需在当前行结尾加 2 个空格 123在当前行的结尾加 2 个空格这行就会新起一行如果是要起一个新段落，只需要空出一行即可。 分隔符如果你有写分割线的习惯，可以新起一行输入三个减号-。当前后都有段落时，请空出一行： 12345前面的段落---后面的段落 小型文本1&lt;small&gt;文本内容&lt;/small&gt; 预览效果：我是正常文字我是小型文字 注释用html的注释，好像只有这样？ 1&lt;!-- 注释 --&gt; 表格123456789| 参数 | 说明 | 默认值 || ------------- |:-------------------:|:------------------:|| host | 远程主机的地址 | || user | 使用者名称 | || root | 远程主机的根目录 | || port | 端口 | 22 || delete | 删除远程主机上的旧文件 | true || verbose | 显示调试信息 | true || ignore_errors | 忽略错误 | false | 预览效果： 参数 说明 默认值 host 远程主机的地址 user 使用者名称 root 远程主机的根目录 port 端口 22 delete 删除远程主机上的旧文件 true verbose 显示调试信息 true ignore_errors 忽略错误 false 最后:还是要注意特殊字符的处理,其他的就是排版样式的问题,特殊字符没处理好,就是Hexo渲染报错.]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo NexT主题配置]]></title>
    <url>%2Fposts%2F5460f326%2F</url>
    <content type="text"><![CDATA[使用NexT主题在 Git Bash 终端执行以下命令： 1$ git clone https://github.com/iissnan/hexo-theme-next themes/next 打开站点配置文件 _config.yml，找到 theme 字段，并将其值更改为 next 1theme: next 我喜欢双栏的故使用 NexT.Pisces 主题，修改主题配置文件 _config.yml的 Schemes 字段的值为： 1scheme: Pisces Next主题宽度调节现在一般都用宽屏显示器，博客页面两侧留白太多，调整一下宽度打开 \themes\next\source\css\_common\components\post\post-expand.styl 文件，找到 1@media (max-width: 767px) 改为 1@media (max-width: 1080px) 打开 \themes\next\source\css\ _variables\base.styl 文件，找到 123$main-desktop = 960px$main-desktop-large = 1200px$content-desktop = 700px 修改 $main-desktop 和 $content-desktop 的数值： 123$main-desktop = 1080px$main-desktop-large = 1200px$content-desktop = 810px Next.Mist 主题的文章宽度至此改完了。如果你用的是 Next.Pisces，还需要继续修改。打开 \themes\next\source\css\_schemes\Pisces\_layout.styl 文件，将第 4 行的 width改为1080px ，修改后如下： 1234.header &#123; position: relative; margin: 0 auto; width: 1080px; 修改文章内链接文本样式将链接文本设置为蓝色，鼠标划过时文字颜色加深，并显示下划线修改文件 themes\next\source\css\_common\components\post\post.styl ，添加如下css样式： 1234567891011// 文章内链接文本样式.post-body p a&#123; color: #0593d3; border-bottom: none; border-bottom: 1px solid #0593d3; &amp;:hover &#123; color: #fc6423; border-bottom: none; border-bottom: 1px solid #fc6423; &#125;&#125; 选择 .post-body 是为了不影响标题，选择 p 是为了不影响首页“阅读全文”的显示样式。 文章底部的那个带#号的标签文章底部的那个带#号的标签，比如#NexT，可以把#换成图标吗，怎么设置?修改模板 layout/_macro/post.swig，搜索 rel=&quot;tag&quot;&gt;#，将 # 换成 &lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt; 首页展示文章动画效果和图片放大镜效果关闭哪改？文章动画效果关闭：主题配置里 Motion: 改为 false 关闭图片放大镜效果: 主题配置里 fancybox: 改为 false hexo背景动态效果和心心把 js 文件 love.js 和 particle.js 放在 \themes\next\source\js\src 文件目录下更新 \themes\next\layout\_layout.swig 文件，在末尾（在前面引用会出现找不到的bug）添加以下 js 引入代码： 1234&lt;!-- 背景动画 --&gt;&lt;script type="text/javascript" src="/js/src/particle.js"&gt;&lt;/script&gt;&lt;!-- 页面点击小红心 --&gt;&lt;script type="text/javascript" src="/js/src/love.js"&gt;&lt;/script&gt; 想设置动画线条颜色可改为： 1&lt;script type="text/javascript" color="255,0,0" opacity="0.3" count="99" src="particle.js"&gt;&lt;/script&gt; 就能显示红色。或者用： 1&lt;script type="text/javascript" src="/js/src/particles.js" count="50" zindex="-2" opacity="1" color="0,104,183"&gt;&lt;/script&gt; 两个JS下载为： 12http://7u2ss1.com1.z0.glb.clouddn.com/love.jshttp://7u2ss1.com1.z0.glb.clouddn.com/particle.js hexo NexT主题首页title的优化更改 index.swig 文件，文件路径是 your-hexo-site\themes\next\layout ，将下面代码 1&#123;% block title %&#125; &#123;&#123; config.title &#125;&#125; &#123;% endblock %&#125; 改成 1&#123;% block title %&#125; &#123;&#123; config.title &#125;&#125; - &#123;&#123; theme.description &#125;&#125; &#123;% endblock %&#125; 这时候你的首页标题会更符合网站名称 - 网站描述这习惯进阶：做了 seo 优化，把关键词也显示在 Title 标题里，可改成 1&#123;% block title %&#125; &#123;&#123; theme.keywords &#125;&#125; - &#123;&#123; config.title &#125;&#125; - &#123;&#123; theme.description &#125;&#125; &#123;% endblock %&#125; 注意：别堆砌关键字，整个标题一般不超过 80 个字符，可以通过chinaz的seo综合查询检查 每篇文章末尾统一添加“本文结束”标记新建 passage-end-tag.swig 文件在路径 \themes\next\layout\_macro 中添加 passage-end-tag.swig 文件，其内容为： 12345&lt;div&gt; &#123;% if not is_index %&#125; &lt;div style="text-align:center;color: #ccc;font-size:14px;"&gt;------本文结束&lt;i class="fa fa-paw"&gt;&lt;/i&gt;感谢阅读------&lt;/div&gt; &#123;% endif %&#125;&lt;/div&gt; 修改 post.swig 文件在 \themes\next\layout\_macro\post.swig 中， post-body 之后， post-footer 之前添加如下代码（post-footer之前两个DIV）： 在主题配置文件中添加字段在主题配置文件 _config.yml 中添加以下字段开启此功能： 123# 文章末尾添加“本文结束”标记passage_end_tag: enabled: true 增加HIGH一下功能在 themes\next\layout\_macro 目录下增加 high.swig 文件，我已改为歌曲循环和多次点击不重复！地址为: 1http://7u2ss1.com1.z0.glb.clouddn.com/high-xunhuan.swig 打开这个地址，复制全部内容，在你本地新建high.swig 文件打开\themes\next\layout\_macro\sidebar.swig文件，打开，在 1234&lt;a href="&#123;&#123; url_for(theme.rss) &#125;&#125;" target="_blank" rel="alternate"&gt; &lt;i class="fa fa-rss"&gt;&lt;/i&gt; RSS&lt;/a&gt; 后边加入： 1&#123;% include 'high.swig' %&#125; 如： 123456789&#123;% if theme.rss %&#125; &lt;div class="feed-link motion-element"&gt; &lt;a href="&#123;&#123; url_for(theme.rss) &#125;&#125;" rel="alternate"&gt; &lt;i class="fa fa-rss"&gt;&lt;/i&gt; RSS &lt;/a&gt; &#123;% include 'high.swig' %&#125; &lt;/div&gt; &#123;% endif %&#125; 接着在主题配置文件 _config.yml ，加入： 12highqilai: enabled: true 然后打开自定义CSS： \themes\next\source\css\_custom\custom.styl 加入 1.feed-link a&#123;display: inline-block;&#125; hexo clean ， hexo g , hexo s 查看效果！主页 High 起来，摇动。改动方法！ 1themes\next\layout\_layout.swig 前添加： 1&lt;link href="http://7u2ss1.com1.z0.glb.clouddn.com/harlem-shake-style.css" rel="stylesheet" type="text/css" /&gt; 地址改为你自己的CSS。失效了不怪！如果只是想当播放器听歌的话改 high.swig 文件内容为： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162&lt;a title="收藏到书签，偶尔High一下^_^" rel="alternate" class="mw-harlem_shake_slow wobble shake" href='javascript:( /* * Copyright (C) 2015 Rocko (rocko.xyz) &lt;rocko.zxp@gmail.com&gt; * * Licensed under the Apache License, Version 2.0 (the "License"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ function go() &#123; var songs = [ "http://7u2ss1.com1.z0.glb.clouddn.com/%E9%AB%98%E6%A2%A8%E5%BA%B7%E6%B2%BB%20-%20%E5%AD%A4%E7%8B%AC.mp3", "http://7u2ss1.com1.z0.glb.clouddn.com/one%20by%20one.mp3", "http://7u2ss1.com1.z0.glb.clouddn.com/Enya%20-%20Only%20Time.mp3", "http://7u2ss1.com1.z0.glb.clouddn.com/Enya%20-%20May%20It%20Be.mp3", "......" ]; function S() &#123; var e = document.getElementById("audio_element_id"); if(e != null)&#123; var index = parseInt(e.getAttribute("curSongIndex")); if(index &gt; songs.length - 2) &#123; index = 0; &#125; else &#123; index++; &#125; e.setAttribute("curSongIndex", index); &#125; e.src = i; e.play() &#125; function initAudioEle() &#123; var e = document.getElementById("audio_element_id"); if(e === null)&#123; e = document.createElement("audio"); e.setAttribute("curSongIndex", 0); e.id = "audio_element_id"; e.loop = false; e.bgcolor = 0; e.innerHTML = " &lt;p&gt;If you are reading this, it is because your browser does not support the audio element. We recommend that you get a new browser.&lt;/p&gt; &lt;p&gt;"; document.body.appendChild(e); e.addEventListener("ended", function() &#123; go(); &#125;, true); &#125; &#125; initAudioEle(); var curSongIndex = parseInt(document.getElementById("audio_element_id").getAttribute("curSongIndex")); var i = songs[curSongIndex]; S(); &#125;)()'&gt; &lt;i class="fa fa-music"&gt;&lt;/i&gt; 听音乐&lt;/a&gt; 作者头像变成圆形打开自定义CSS： \themes\next\source\css\_custom\custom.styl 加入 1234567.site-author-image &#123; border-radius: 100%; padding: 2px; border: 2px dashed #fff; animation: cycle 2s 0.5s forwards; transition: border-radius 2s;&#125; 博主名字号大小,也在 custom.styl 文件: 123.site-author-name &#123; font-size: 16px;&#125; 博文置顶修改 hexo-generator-index 插件替换文件：node_modules/hexo-generator-index/lib/generator.js为： 12345678910111213141516171819202122232425262728'use strict';var pagination = require('hexo-pagination');module.exports = function(locals)&#123; var config = this.config; var posts = locals.posts; posts.data = posts.data.sort(function(a, b) &#123; if(a.top &amp;&amp; b.top) &#123; // 两篇文章top都有定义 if(a.top == b.top) return b.date - a.date; // 若top值一样则按照文章日期降序排 else return b.top - a.top; // 否则按照top值降序排 &#125; else if(a.top &amp;&amp; !b.top) &#123; // 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233） return -1; &#125; else if(!a.top &amp;&amp; b.top) &#123; return 1; &#125; else return b.date - a.date; // 都没定义按照文章日期降序排 &#125;); var paginationDir = config.pagination_dir || 'page'; return pagination('', posts, &#123; perPage: config.index_generator.per_page, layout: ['index', 'archive'], format: paginationDir + '/%d/', data: &#123; __index: true &#125; &#125;);&#125;; 设置文章置顶在文章 Front-matter 中添加 top 值，数值越大文章越靠前，如： 1234567---title: Hexo NexT主题配置tags: hexocategories: hexodate: 2016-12-27 12:10:15top: 5--- NexT主题自定义面页无序列表样式打开自定义CSS： \themes\next\source\css\_custom\custom.styl 加入： 123ul &#123;list-style-type: circle; // 空心圆，实心圆为 disc&#125; 原文地址：Hexo+NexT主题配置备忘]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[20个正则表达式]]></title>
    <url>%2Fposts%2F6a7404c1%2F</url>
    <content type="text"><![CDATA[正则表达式经常被用于字段或任意字符串的校验，比如下面这段校验基本日期格式的JavaScript代码： 123var reg = /^(\\d&#123;1,4&#125;)(-|\\/)(\\d&#123;1,2&#125;)\\2(\\d&#123;1,2&#125;)$/;var r = fieldValue.match(reg);if(r==null)alert('Date format error!'); 校验密码强度密码的强度必须包含大小写字母和数字的组合，不能使用特殊字符，长度在8-10之间 1^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).&#123;8,10&#125;$ 校验中文，字符串只能是中文1^[\\u4e00-\\u9fa5]&#123;0,&#125;$ 由数字，26个英文字母或下划线组成的字符串1^\\w+$ 校验E-Mail 地址1校验E-Mail 地址 校验身份证号码1234515位：^[1-9]\\d&#123;7&#125;((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d&#123;3&#125;$18位：^[1-9]\\d&#123;5&#125;[1-9]\\d&#123;3&#125;((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d&#123;3&#125;([0-9]|X)$ 校验日期12“yyyy-mm-dd“ 格式的日期校验，已考虑平闰年^(?:(?!0000)[0-9]&#123;4&#125;-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1[0-9]|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[0-9]&#123;2&#125;(?:0[48]|[2468][048]|[13579][26])|(?:0[48]|[2468][048]|[13579][26])00)-02-29)$ 校验金额，精确到2位小数1^[0-9]+(.[0-9]&#123;2&#125;)?$ 校验手机号下面是国内 13、15、18开头的手机号正则表达式 1^(13[0-9]|14[5|7]|15[0|1|2|3|5|6|7|8|9]|18[0|1|2|3|5|6|7|8|9])\\d&#123;8&#125;$ 判断IE的版本1^.*MSIE [5-8](?:\\.[0-9]+)?(?!.*Trident\\/[5-9]\\.0).*$ 校验IP-v4地址1\\b(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.)&#123;3&#125;(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\b 校验IP-v6地址1(([0-9a-fA-F]&#123;1,4&#125;:)&#123;7,7&#125;[0-9a-fA-F]&#123;1,4&#125;|([0-9a-fA-F]&#123;1,4&#125;:)&#123;1,7&#125;:|([0-9a-fA-F]&#123;1,4&#125;:)&#123;1,6&#125;:[0-9a-fA-F]&#123;1,4&#125;|([0-9a-fA-F]&#123;1,4&#125;:)&#123;1,5&#125;(:[0-9a-fA-F]&#123;1,4&#125;)&#123;1,2&#125;|([0-9a-fA-F]&#123;1,4&#125;:)&#123;1,4&#125;(:[0-9a-fA-F]&#123;1,4&#125;)&#123;1,3&#125;|([0-9a-fA-F]&#123;1,4&#125;:)&#123;1,3&#125;(:[0-9a-fA-F]&#123;1,4&#125;)&#123;1,4&#125;|([0-9a-fA-F]&#123;1,4&#125;:)&#123;1,2&#125;(:[0-9a-fA-F]&#123;1,4&#125;)&#123;1,5&#125;|[0-9a-fA-F]&#123;1,4&#125;:((:[0-9a-fA-F]&#123;1,4&#125;)&#123;1,6&#125;)|:((:[0-9a-fA-F]&#123;1,4&#125;)&#123;1,7&#125;|:)|fe80:(:[0-9a-fA-F]&#123;0,4&#125;)&#123;0,4&#125;%[0-9a-zA-Z]&#123;1,&#125;|::(ffff(:0&#123;1,4&#125;)&#123;0,1&#125;:)&#123;0,1&#125;((25[0-5]|(2[0-4]|1&#123;0,1&#125;[0-9])&#123;0,1&#125;[0-9])\\.)&#123;3,3&#125;(25[0-5]|(2[0-4]|1&#123;0,1&#125;[0-9])&#123;0,1&#125;[0-9])|([0-9a-fA-F]&#123;1,4&#125;:)&#123;1,4&#125;:((25[0-5]|(2[0-4]|1&#123;0,1&#125;[0-9])&#123;0,1&#125;[0-9])\\.)&#123;3,3&#125;(25[0-5]|(2[0-4]|1&#123;0,1&#125;[0-9])&#123;0,1&#125;[0-9])) 检查URL的前缀12if (!s.match(/^[a-zA-Z]+:\\/\\//))&#123; s = 'http://' + s;&#125; 提取URL链接1^(f|ht)&#123;1&#125;(tp|tps):\\/\\/([\\w-]+\\.)+[\\w-]+(\\/[\\w- ./?%&amp;=]*)? 文件路径及扩展名校验1^([a-zA-Z]\\:|\\\\)\\\\([^\\\\]+\\\\)*[^\\/:*?"&lt;&gt;|]+\\.txt(l)?$ 提取Color Hex Codes1^#([A-Fa-f0-9]&#123;6&#125;|[A-Fa-f0-9]&#123;3&#125;)$ 提取网页图片1\\&lt; *[img][^\\\\&gt;]*[src] *= *[\\"\\']&#123;0,1&#125;([^\\"\\'\\ &gt;]*) 提取页面超链接1(&lt;a\\s*(?!.*\\brel=)[^&gt;]*)(href="https?:\\/\\/)((?!(?:(?:www\\.)?'.implode('|(?:www\\.)?', $follow_list).'))[^"]+)"((?!.*\\brel=)[^&gt;]*)(?:[^&gt;]*)&gt; 查找CSS属性1^\\s*[a-zA-Z\\-]+\\s*[:]&#123;1&#125;\\s[a-zA-Z0-9\\s.#]+[;]&#123;1&#125; 抽取注释1&lt;!--(.*?)--&gt; 匹配HTML标签1&lt;\\/?\\w+((\\s+\\w+(\\s*=\\s*(?:".*?"|'.*?'|[\\^'"&gt;\\s]+))?)+\\s*|\\s*)\\/?&gt;]]></content>
      <categories>
        <category>H5</category>
      </categories>
      <tags>
        <tag>H5</tag>
        <tag>正则表达式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo安装教程]]></title>
    <url>%2Fposts%2F986095e4%2F</url>
    <content type="text"><![CDATA[安装node.js官方下载地址 设置npm淘宝镜像站npm默认的源的下载速度可能很慢，建议使用淘宝镜像替换 执行下面的命令，将npm的源设置成淘宝镜像站 1npm config set registry "https://registry.npm.taobao.org" 申请Github账号Github注册页面 创建博客仓库注意! 仓库名应该为：用户名.github.io。比如，我的仓库名是：friendship328.github.io 安装gitgit下载地址 配置ssh打开git bash终端设置user.name和user.email 12git config --global user.name "你的GitHub用户名"git config --global user.email "你的GitHub注册邮箱" 生成ssh密匙 1ssh-keygen -t rsa -C "你的GitHub注册邮箱" 此时，在用户文件夹下就会有一个新的文件夹.ssh，里面有刚刚创建的ssh密钥文件id_rsa和id_rsa.pub 将公匙添加到github上用户头像→Settings→SSH and GPG keys→New SSH key→将id_rsa.pub中的内容复制到Key文本框中，然后点击Add SSH key(添加SSH)按钮 安装hexo执行以下命令安装hexo1234567891011121314151617# 安装hexonpm install hexo-cli g# 初始化博客文件夹hexo init blog# 切换到该路径cd blog# 安装hexo的扩展插件npm install# 安装其它插件npm install hexo-server --savenpm install hexo-admin --savenpm install hexo-generator-archive --savenpm install hexo-generator-feed --savenpm install hexo-generator-search --savenpm install hexo-generator-tag --savenpm install hexo-deployer-git --savenpm install hexo-generator-sitemap --save 初探hexo第一次使用hexo，在本地创建服务器使用 1234# 生成静态页面hexo generate# 开启本地服务器hexo s 打开浏览器，地址栏中输入：http://localhost:4000/, 应该可以看见刚刚创建的博客了 问题：为什么访问 http://localhost:4000/ 无反应？解决方法：可能是由于端口问题引起的。使用Ctrl+C中断本地服务，使用命令hexo s -p 5000重新开启本地服务，访问 http://localhost:5000/ 可以看到博客页面了 将hexo博客部署到github上修改配置文件blog/_config.yml，修改deploy项的内容，如下所示： 123456789# Deployment 注释## Docs: https://hexo.io/docs/deployment.htmldeploy: # 类型 type: git # 仓库 repo: git@github.com:friendship328/friendship328.github.io.git # 分支 branch: master 注意：type: git中的冒号后面由空格注意：将git@github.com:friendship328/friendship328.github.io.git 中的用户名换成自己的用户名 git@github.com:github_username/github_username.github.io.git 部署hexo输入下面的命令将hexo博客部署到github中： 123456# 清空静态页面hexo clean# 生成静态页面hexo generate# 部署hexo deploy 打开网页，输入http://github_username.github.io，打开github上托管的博客。如我的博客地址是：http://friendship328.github.io hexo命令缩写hexo支持命令缩写，如下所示。hexo g等价于hexo generate 1234hexo g：hexo generatehexo c：hexo cleanhexo s：hexo serverhexo d：hexo deploy hexo组合命令1234# 清除、生成、启动hexo clean &amp;&amp; hexo g -s# 清除、生成、部署hexo clean &amp;&amp; hexo g -d 常见问题hexo deploy没有反应？修改配置文件：_config.yml时，冒号后面没加空格 hexo s 网站打不开？端口占用，换个端口就好了。执行命令hexo s -p 5000，并在浏览器地址栏输入 http://localhost:5000 回车访问 如何换主题？ 将主题下载后，放到themes文件夹中即可。例如，下面命令安装next主题： 1git clone https://github.com/iissnan/hexo-theme-next themes/next 原博客地址：hexo教程系列——hexo安装教程]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[前端常用网址]]></title>
    <url>%2Fposts%2Faf2d2210%2F</url>
    <content type="text"><![CDATA[前端常用网址 jQuery插件库： http://www.jq22.com/ 17素材网： http://www.17sucai.com/ dowebok(特效插件)： http://www.dowebok.com/ w3cplus(w3cplus提供了大量的css,css3,sass,responsive,mobile等最新前端技术文章、demo及下载资源)： http://www.w3cplus.com/ 前端里(Web 开发技术和资源分享)：http://www.yyyweb.com/ 视频网站 慕课网： http://www.imooc.com/ 极客学院： http://www.jikexueyuan.com/ 智能社： http://www.zhinengshe.com/ css3 CSS3 的鼠标悬停效果集合： http://ianlunn.github.io/Hover/ animate.css： https://daneden.github.io/animate.css/ CSS3手机响应式效果：http://www.zaole.net/ 图标 Iconfont： http://www.iconfont.cn/ 设计相关 花瓣网：http://huaban.com/ 爱果果：http://www.iguoguo.net/ 优设网：http://www.uisdc.com/ 站酷网：http://www.zcool.com.cn/ 黄蜂网：http://woofeng.cn/ 素材天下：http://www.sucaitianxia.com/ UI中国：http://www.ui.cn/ 日常 jQuery 之家：http://www.htmleaf.com/ segmentfault：https://segmentfault.com/ 大前端：http://www.daqianduan.com/ 牛客网（专业IT笔试面试备考平台）：https://www.nowcoder.com/ 前端网：http://www.qdfuns.com/]]></content>
      <categories>
        <category>H5</category>
      </categories>
      <tags>
        <tag>H5</tag>
        <tag>网址</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo seo优化]]></title>
    <url>%2Fposts%2Ffe6afcc5%2F</url>
    <content type="text"><![CDATA[Next主题自带SEO优化选项hexo博客next提供了seo优化选项，在主题配置文件_config.yml中有个选项是seo，默认是false，改成true即开启了seo优化，会进行一些seo优化，如改变博文title等，然后相同文件下有个关键字选项keywords，填充上，写博文时最好每篇博文都加上keywords。hexo的根目录配置文件_config.yml中title、subtitle和description也建议填上。开启seo优化后可以查看网页源码跟之前有什么不同。 文章标题转换唯一链接使用插件hexo-abbrlink可以做到，安装： 1$ npm install hexo-abbrlink --save 然后hexo的根目录配置文件_config.yml中修改： 1234permalink: :abbrlink/abbrlink: alg: crc32 # 算法：crc16(default) and crc32 rep: dec # 进制：dec(default) and hex 这样就确保了博文链接的唯一化，只要不修改md文件的abbrlink的值，url就永久不会改变。如此md文件名和文件内容也可以随便改了。这样也有利于SEO优化。 给出站链接添加 “nofollow” 标签nofollow标签是由谷歌领头创新的一个“反垃圾链接”的标签，并被百度、yahoo等各大搜索引擎广泛支持，引用nofollow标签的目的是：用于指示搜索引擎不要追踪（即抓取）网页上的带有nofollow属性的任何出站链接，以减少垃圾链接的分散网站权重。 Hexo 的 Next 主题需要改以下几个地方： 找到footer.swig，路径在your-hexo-site\themes\next\layout\_partials，将下面代码中的a标签加上rel=&quot;external nofollow&quot;属性； 1&#123;&#123; __('footer.powered', '&lt;a class="theme-link" href="http://hexo.io"&gt;Hexo&lt;/a&gt;') &#125;&#125; 1&lt;a class="theme-link" href="https://github.com/iissnan/hexo-theme-next"&gt; 修改sidebar.swig文件，路径在your-hexo-site\themes\next\layout_macro，将下面代码中的a标签加上rel=&quot;external nofollow&quot;属性；1&lt;a href="&#123;&#123; link &#125;&#125;" target="_blank"&gt;&#123;&#123; name &#125;&#125;&lt;/a&gt; 1&lt;a href="http://creativecommons.org/licenses/&#123;&#123; theme.creative_commons &#125;&#125;/4.0" class="cc-opacity" target="_blank"&gt; 让百度收录你的站点我们首先要做的就是让各大搜索引擎收录你的站点，我们在刚建站的时候各个搜索引擎是没有收录我们网站的，在搜索引擎中输入site:&lt;域名&gt;,来看我们的网站有没有被百度收录。我们可以直接点击下面的“网址提交”来提交我们的网站. 登录百度站长平台，只要有百度旗下的账号就可以登录，登录成功之后在站点管理中点击添加网站然后输入你的站点地址，建议输入的网站为www开头的，不要输入github.io的，因为github是不允许百度的spider爬取github上的内容的，所以如果想让你的站点被百度收录，只能使用自己购买的域名。或者用国内的coding。 选择完网站的类型之后需要验证网站的所有权，验证网站所有权的方式有三种：文件验证、html标签验证、cname解析验证。注意：使用文件验证文件存放的位置需要放在source文件夹下，如果是html文件那么hexo就会将其编译，所以必须要加上的layout:false，这样就不会被hexo编译。（如果验证文件是txt格式的就不需要），其他两种方式也是很简单的。我个人推荐文件验证和cname验证，cname验证最为简单，只需加一条解析就好~ 给站点添加sitemap我们需要使用npm自动生成网站的sitemap，然后将生成的sitemap提交到百度和其他搜索引擎 安装sitemap插件12npm install hexo-generator-sitemap --savenpm install hexo-generator-baidu-sitemap --save 在站点配置文件_config.yml中添加以下代码12345# 自动生成sitemapsitemap:path: sitemap.xmlbaidusitemap:path: baidusitemap.xml 修改站点配置文件_config.yml123# URL## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'url: http://yoursite Hexo编译12hexo cleanhexo g 生成sitemap.xml和baidusitemap.xml，重启hexo通过 http://localhost:4000/baidusitemap.xml 和 http://localhost:4000/sitemap.xml 查看该文件是否生成，其中sitemap.xml文件是搜索引擎通用的文件，baidusitemap.xml是百度专用的sitemap文件。 提交sitemap到站长平台有两种提交方式，自动提交和手动提交，自动提交又分为主动推送、自动推送和sitemap. 如何选择链接提交方式主动推送：最为快速的提交方式，推荐您将站点当天新产出链接立即通过此方式推送给百度，以保证新链接可以及时被百度收录。 自动推送：最为便捷的提交方式，请将自动推送的JS代码部署在站点的每一个页面源代码中，部署代码的页面在每次被浏览时，链接会被自动推送给百度。可以与主动推送配合使用。 sitemap：您可以定期将网站链接放到sitemap中，然后将sitemap提交给百度。百度会周期性的抓取检查您提交的sitemap，对其中的链接进行处理，但收录速度慢于主动推送。 手动提交：一次性提交链接给百度，可以使用此种方式。 从效率上来：主动推送&gt;自动推送&gt;sitemap 主动推送安装插件 1npm install hexo-baidu-url-submit --save 然后再根目录的配置文件中新增字段 12345baidu_url_submit: count: 100 # 提交最新的一个链接 host: www.cherryblog.site # 在百度站长平台中注册的域名 token: 8OGYpxowYnhgVsUM # 请注意这是您的秘钥， 所以请不要把博客源代码发布在公众仓库里! path: baidu_urls.txt # 文本文档的地址， 新链接会保存在此文本文档里 在加入新的deploye 12deploy: - type:baidu_url_submitter 这样执行hexo deploy的时候，新的链接就会被推送了 自动推送在主题配置文件下设置,将baidu_push设置为true： 12# Enable baidu push so that the blog will push the url to baidu automatically which is very helpful for SEObaidu_push: true 然后就会将一下代码自动推送到百度，位置是themes\next\layout_scripts\baidu_push.swig,这样每次访问博客中的页面就会自动向百度提交sitemap 12345678910111213141516&#123;% if theme.baidu_push %&#125;&lt;script&gt;(function()&#123; var bp = document.createElement('script'); var curProtocol = window.location.protocol.split(':')[0]; if (curProtocol === 'https') &#123; bp.src = 'https://zz.bdstatic.com/linksubmit/push.js'; &#125; else &#123; bp.src = 'http://push.zhanzhang.baidu.com/push.js'; &#125; var s = document.getElementsByTagName("script")[0]; s.parentNode.insertBefore(bp, s);&#125;)();&lt;/script&gt;&#123;% endif %&#125; 添加蜘蛛协议 robots新建robots.txt文件，添加以下文件内容，把robots.txt放在hexo站点的source文件下123456789101112# hexo robots.txtUser-agent: * Allow: /Allow: /archives/Disallow: /vendors/Disallow: /js/Disallow: /css/Disallow: /fonts/Disallow: /vendors/Disallow: /fancybox/Sitemap: 域名/sitemap.xmlSitemap: 域名/baidusitemap.xml 然后去百度站长平台检测robots文件看看有没有生效 hexo目录结构默认目录结构：1234567891011.├── .deploy├── public├── scaffolds├── scripts├── source| ├── _drafts| └── _posts├── themes├── _config.yml└── package.json deploy：执行hexo deploy命令部署到GitHub上的内容目录 public：执行hexo generate命令，输出的静态网页内容目录 scaffolds：layout模板文件目录，其中的md文件可以添加编辑 scripts：扩展脚本目录，这里可以自定义一些javascript脚本 source：文章源码目录，该目录下的markdown和html文件均会被hexo处理。该页面对应repo的根目录，404文件、favicon.ico文件，CNAME文件等都应该放这里，该目录下可新建页面目录 drafts：草稿文章 posts：发布文章 themes：主题文件目录 _config.yml：全局配置文件，大多数的设置都在这里 package.json：应用程序数据，指明hexo的版本等信息，类似于一般软件中的关于按钮 主题结构：12345678910111213141516171819202122232425262728293031323334353637├── .github #git信息├── languages #多语言| ├── default.yml #默认语言| └── zh-Hans.yml #简体中文| └── zh-tw.yml #繁体中文├── layout #布局，根目录下的*.ejs文件是对主页，分页，存档等的控制| ├── _custom #可以自己修改的模板，覆盖原有模板| | ├── _header.swig #头部样式| | ├── _sidebar.swig #侧边栏样式| ├── _macro #可以自己修改的模板，覆盖原有模板| | ├── post.swig #文章模板| | ├── reward.swig #打赏模板| | ├── sidebar.swig #侧边栏模板| ├── _partial #局部的布局| | ├── head #头部模板| | ├── search #搜索模板| | ├── share #分享模板| ├── _script #局部的布局| ├── _third-party #第三方模板| ├── _layout.swig #主页面模板| ├── index.swig #主页面模板| ├── page #页面模板| └── tag.swig #tag模板├── scripts #script源码| ├── tags #tags的script源码| ├── marge.js #页面模板├── source #源码| ├── css #css源码| | ├── _common #*.styl基础css| | ├── _custom #*.styl局部css| | └── _mixins #mixins的css| ├── fonts #字体| ├── images #图片| ├── uploads #添加的文件| └── js #javascript源代码├── _config.yml #主题配置文件└── README.md #用GitHub的都知道 域名解析 git A记录的记录值就是ip地址，github(官方文档)提供了两个IP地址，192.30.252.153和192.30.252.154，这两个IP地址为github的服务器地址，两个都要填上. 解析记录设置两个www和@，线路就默认就行了，CNAME记录值填你的github博客网址 在自己的Hexo\source目录下创建一个CNAME文件，注意不带后缀的，打开后，里面写入自己的域名地址，如：www.xxxxx.com hexo-wordcount阅读时长安装wordcount插件 1npm install hexo-wordcount --save 主要功能：字数统计:WordCount阅读时长预计:Min2Read总字数统计: TotalCount 安装完插件之后在主题的配置文件中开启该功能就可以~,如果仅仅只是打开开关，部署之后会发现文章的【字数统计】和【阅读时长】后面没有对应的xxx字，xx分钟等字样，只有光秃秃的数字在那里. 解决方案 找到Blog\themes\next\layout\_macro\post.swig 文件 字数统计 123&lt;span title="&#123;&#123; __('post.wordcount') &#125;&#125;"&gt; &#123;&#123; wordcount(post.content) &#125;&#125;&lt;/span&gt; 123&lt;span title="&#123;&#123; __('post.wordcount') &#125;&#125;"&gt; &#123;&#123; wordcount(post.content) &#125;&#125; 字 &lt;/span&gt; 阅读时长 123&lt;span title="&#123;&#123; __('post.min2read') &#125;&#125;"&gt; &#123;&#123; min2read(post.content) &#125;&#125; &lt;/span&gt; 添加 “分钟”到min2read(post.content) }} 后面，修改后为： 123&lt;span title="&#123;&#123; __('post.min2read') &#125;&#125;"&gt; &#123;&#123; min2read(post.content) &#125;&#125; 分钟 &lt;/span&gt; 添加 “字”到wordcount(post.content) }} 后面，修改后为： 再次运行，就能得到正常的如“字数统计 100字”“阅读时长 6分钟”这样的样式了 添加动态titile —崩溃欺骗新建js文件并添加如下代码，放在\themes\next\source\js\src文件目录下引用 1234567891011121314151617&lt;!--崩溃欺骗--&gt;var OriginTitile = document.title; var titleTime; document.addEventListener('visibilitychange', function () &#123; if (document.hidden) &#123; $('[rel="icon"]').attr('href', "/img/TEP.ico"); document.title = '╭(°A°`)╮ 页面崩溃啦 ~ | 量子广告！'; clearTimeout(titleTime); &#125; else &#123; $('[rel="icon"]').attr('href', "/favicon.ico"); document.title = '(ฅ&gt;ω&lt;*ฅ) 噫又好了~' + OriginTitile; titleTime = setTimeout(function () &#123; document.title = OriginTitile; &#125;, 2000); &#125; &#125;); 压缩优化123npm install --global gulp-cli //按照全局gulpnpm install gulp --save-dev //cd进入项目根目录，安装gulpnpm install gulp-shell gulp-clean gulp-minify-html gulp-minify-css gulp-uglify gulp-notify --save-dev //安装插件 新建gulpfile.js文件放到根目录 123456789101112131415161718192021222324252627282930313233343536373839404142var gulp = require('gulp'), clean = require('gulp-clean'), minifyCss = require('gulp-minify-css'), minifyHtml = require('gulp-minify-html'), uglify = require('gulp-uglify'), notify = require('gulp-notify'), shell = require('gulp-shell');//清空dest文件夹gulp.task("clean",function() &#123; return gulp.src("./dst/*") .pipe(clean());&#125;);// 压缩css文件，已压缩文件不用再压缩gulp.task("css",function() &#123; return gulp.src(["public/**/*.css","!public/**/*.min.css"]) .pipe(minifyCss(&#123;compatibility: "ie8"&#125;)) .pipe(gulp.dest("./dst/")); &#125;);// 压缩js文件gulp.task("js",function() &#123; return gulp.src(["public/**/*.js","!public/**/*.min.js"]) .pipe(uglify()) .pipe(gulp.dest("./dst/"));&#125;);// 压缩html文件gulp.task("html",function() &#123; return gulp.src("public/**/*.html") .pipe(minifyHtml()) .pipe(gulp.dest("./dst/"));&#125;);// 设置默认任务，command line下输入gulp执行// clean任务执行完成了才会去运行其他的任务，在gulp.start()里的任务执行的顺序是不确定的，所以将要在它们之前执行的任务写在数组里面gulp.task("default",['clean'],function() &#123; gulp.start('css', 'js', 'html');&#125;);// det文件复制到publicgulp.task("mv",function() &#123; return gulp.src("./dst/*") .pipe(shell([ "cp -r ./dst/* ./public/" ]));&#125;); 执行命令gulp，压缩代码到dst执行命令gulp mv，将压缩后的代码复制到public]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[常用的meta标签]]></title>
    <url>%2Fposts%2F5dcb87a6%2F</url>
    <content type="text"><![CDATA[123456789101112131415161718192021222324252627282930313233343536373839404142&lt;!-- 关键字，搜所引擎 SEO --&gt;&lt;meta http-equiv="keywords" content="关键字1,关键字2,..."&gt;&lt;!-- 页面描述 --&gt;&lt;meta http-equiv="description" content="网页描述"&gt;&lt;!-- content的取值为webkit,ie-comp,ie-stand之一，区分大小写，分别代表用webkit内核，IE兼容内核，IE标准内核。 --&gt;&lt;meta name="renderer" content="webkit|ie-comp|ie-stand"&gt;&lt;!-- 若页面需默认用极速核，增加标签： --&gt;&lt;meta name="renderer" content="webkit"&gt;&lt;!-- 若页面需默认用ie兼容内核，增加标签： --&gt;&lt;meta name="renderer" content="ie-comp"&gt;&lt;!-- 若页面需默认用ie标准内核，增加标签： --&gt;&lt;meta name="renderer" content="ie-stand"&gt;&lt;!-- 如果安装了GCF，则使用GCF来渲染页面，如果没有安装GCF，则使用最高版本的IE内核进行渲染。 X-UA-Compatible：这是个是IE8的专用标记,用来指定IE8浏览器去模拟某个特定版本的IE浏览器的渲染方式(比如人见人烦的IE6)，以此来解决部分兼容问题。 --&gt;&lt;meta http-equiv="X-UA-Compatible" content="IE=Edge,chrome=1" &gt;&lt;!-- 强制页面在当前窗口以独立页面显示。 --&gt;&lt;meta http-equiv="Window-target" content="_top"&gt;&lt;!-- 自动刷新，并指向新的页面 --&gt;&lt;meta http-equiv="Refresh" content="2；URL=http://"&gt;&lt;!-- 禁止浏览器缓存 --&gt;&lt;!-- 是用于设定禁止浏览器从本地机的缓存中调阅页面内容，设定后一旦离开网页就无法从Cache中再调出用法： --&gt;&lt;meta http-equiv="pragram" content="no-cache"&gt;&lt;!-- 清除缓存（再访问这个网站要重新下载！） --&gt;&lt;meta http-equiv="cache-control" content="no-cache, must-revalidate"&gt;&lt;!-- 设定网页的到期时间 --&gt;&lt;meta http-equiv="expires" content="0"&gt;&lt;!-- 手机端 --&gt;&lt;meta name="format-detection" content="telphone=no, email=no"/&gt;&lt;!-- 忽略页面中的数字识别为电话，忽略email识别 --&gt;&lt;meta name="apple-mobile-web-app-status-bar-style" content="black"/&gt;&lt;!-- 设置苹果工具栏颜色 --&gt;&lt;!-- 不让百度转码 --&gt;&lt;meta http-equiv="Cache-Control" content="no-siteapp" /&gt;&lt;!-- 不缓存 --&gt;&lt;meta http-equiv="cache-control" content="no-cache" /&gt;&lt;!-- 初始化设备 --&gt;&lt;meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no, minimal-ui" /&gt;&lt;!-- 网站开启对iphone私有 web app 程序的支持 --&gt;&lt;meta content="yes" name="apple-mobile-web-app-capable" /&gt;&lt;!-- 改变顶部状态条的颜色 iphone私有的属性--&gt;&lt;meta content="black" name="apple-mobile-web-app-status-bar-style" /&gt; 移动前端123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104&lt;!DOCTYPE html&gt; &lt;!-- 使用 HTML5 doctype，不区分大小写 --&gt;&lt;html lang="zh-cmn-Hans"&gt; &lt;!-- 更加标准的 lang 属性写法 http://zhi.hu/XyIa --&gt;&lt;head&gt; &lt;!-- 声明文档使用的字符编码 --&gt; &lt;meta charset='utf-8'&gt; &lt;!-- 优先使用 IE 最新版本和 Chrome --&gt; &lt;meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"/&gt; &lt;!-- 页面描述 --&gt; &lt;meta name="description" content="不超过150个字符"/&gt; &lt;!-- 页面关键词 --&gt; &lt;meta name="keywords" content=""/&gt; &lt;!-- 网页作者 --&gt; &lt;meta name="author" content="name, email@gmail.com"/&gt; &lt;!-- 搜索引擎抓取 --&gt; &lt;meta name="robots" content="index,follow"/&gt; &lt;!-- 为移动设备添加 viewport --&gt; &lt;meta name="viewport" content="initial-scale=1, maximum-scale=3, minimum-scale=1, user-scalable=no"&gt; &lt;!-- `width=device-width` 会导致 iPhone 5 添加到主屏后以 WebApp 全屏模式打开页面时出现黑边 http://bigc.at/ios-webapp-viewport-meta.orz --&gt; &lt;!-- iOS 设备 begin --&gt; &lt;meta name="apple-mobile-web-app-title" content="标题"&gt; &lt;!-- 添加到主屏后的标题（iOS 6 新增） --&gt; &lt;meta name="apple-mobile-web-app-capable" content="yes"/&gt; &lt;!-- 是否启用 WebApp 全屏模式，删除苹果默认的工具栏和菜单栏 --&gt; &lt;meta name="apple-itunes-app" content="app-id=myAppStoreID, affiliate-data=myAffiliateData, app-argument=myURL"&gt; &lt;!-- 添加智能 App 广告条 Smart App Banner（iOS 6+ Safari） --&gt; &lt;meta name="apple-mobile-web-app-status-bar-style" content="black"/&gt; &lt;!-- 设置苹果工具栏颜色 --&gt; &lt;meta name="format-detection" content="telphone=no, email=no"/&gt; &lt;!-- 忽略页面中的数字识别为电话，忽略email识别 --&gt; &lt;!-- 启用360浏览器的极速模式(webkit) --&gt; &lt;meta name="renderer" content="webkit"&gt; &lt;!-- 避免IE使用兼容模式 --&gt; &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt; &lt;!-- 不让百度转码 --&gt; &lt;meta http-equiv="Cache-Control" content="no-siteapp" /&gt; &lt;!-- 针对手持设备优化，主要是针对一些老的不识别viewport的浏览器，比如黑莓 --&gt; &lt;meta name="HandheldFriendly" content="true"&gt; &lt;!-- 微软的老式浏览器 --&gt; &lt;meta name="MobileOptimized" content="320"&gt; &lt;!-- uc强制竖屏 --&gt; &lt;meta name="screen-orientation" content="portrait"&gt; &lt;!-- QQ强制竖屏 --&gt; &lt;meta name="x5-orientation" content="portrait"&gt; &lt;!-- UC强制全屏 --&gt; &lt;meta name="full-screen" content="yes"&gt; &lt;!-- QQ强制全屏 --&gt; &lt;meta name="x5-fullscreen" content="true"&gt; &lt;!-- UC应用模式 --&gt; &lt;meta name="browsermode" content="application"&gt; &lt;!-- QQ应用模式 --&gt; &lt;meta name="x5-page-mode" content="app"&gt; &lt;!-- windows phone 点击无高光 --&gt; &lt;meta name="msapplication-tap-highlight" content="no"&gt; &lt;!-- iOS 图标 begin --&gt; &lt;link rel="apple-touch-icon-precomposed" href="/apple-touch-icon-57x57-precomposed.png"/&gt; &lt;!-- iPhone 和 iTouch，默认 57x57 像素，必须有 --&gt; &lt;link rel="apple-touch-icon-precomposed" sizes="114x114" href="/apple-touch-icon-114x114-precomposed.png"/&gt; &lt;!-- Retina iPhone 和 Retina iTouch，114x114 像素，可以没有，但推荐有 --&gt; &lt;link rel="apple-touch-icon-precomposed" sizes="144x144" href="/apple-touch-icon-144x144-precomposed.png"/&gt; &lt;!-- Retina iPad，144x144 像素，可以没有，但推荐有 --&gt; &lt;!-- iOS 图标 end --&gt; &lt;!-- iOS 启动画面 begin --&gt; &lt;link rel="apple-touch-startup-image" sizes="768x1004" href="/splash-screen-768x1004.png"/&gt; &lt;!-- iPad 竖屏 768 x 1004（标准分辨率） --&gt; &lt;link rel="apple-touch-startup-image" sizes="1536x2008" href="/splash-screen-1536x2008.png"/&gt; &lt;!-- iPad 竖屏 1536x2008（Retina） --&gt; &lt;link rel="apple-touch-startup-image" sizes="1024x748" href="/Default-Portrait-1024x748.png"/&gt; &lt;!-- iPad 横屏 1024x748（标准分辨率） --&gt; &lt;link rel="apple-touch-startup-image" sizes="2048x1496" href="/splash-screen-2048x1496.png"/&gt; &lt;!-- iPad 横屏 2048x1496（Retina） --&gt; &lt;link rel="apple-touch-startup-image" href="/splash-screen-320x480.png"/&gt; &lt;!-- iPhone/iPod Touch 竖屏 320x480 (标准分辨率) --&gt; &lt;link rel="apple-touch-startup-image" sizes="640x960" href="/splash-screen-640x960.png"/&gt; &lt;!-- iPhone/iPod Touch 竖屏 640x960 (Retina) --&gt; &lt;link rel="apple-touch-startup-image" sizes="640x1136" href="/splash-screen-640x1136.png"/&gt; &lt;!-- iPhone 5/iPod Touch 5 竖屏 640x1136 (Retina) --&gt; &lt;!-- iOS 启动画面 end --&gt; &lt;!-- iOS 设备 end --&gt; &lt;meta name="msapplication-TileColor" content="#000"/&gt; &lt;!-- Windows 8 磁贴颜色 --&gt; &lt;meta name="msapplication-TileImage" content="icon.png"/&gt; &lt;!-- Windows 8 磁贴图标 --&gt; &lt;link rel="alternate" type="application/rss+xml" title="RSS" href="/rss.xml"/&gt; &lt;!-- 添加 RSS 订阅 --&gt; &lt;link rel="shortcut icon" type="image/ico" href="/favicon.ico"/&gt; &lt;!-- 添加 favicon icon --&gt; &lt;!-- sns 社交标签 begin --&gt; &lt;!-- 参考微博API --&gt; &lt;meta property="og:type" content="类型" /&gt; &lt;meta property="og:url" content="URL地址" /&gt; &lt;meta property="og:title" content="标题" /&gt; &lt;meta property="og:image" content="图片" /&gt; &lt;meta property="og:description" content="描述" /&gt; &lt;!-- sns 社交标签 end --&gt; &lt;title&gt;标题&lt;/title&gt;&lt;/head&gt;]]></content>
      <categories>
        <category>H5</category>
      </categories>
      <tags>
        <tag>H5</tag>
        <tag>meta</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[css3实现图片木桶布局]]></title>
    <url>%2Fposts%2F6eb4240a%2F</url>
    <content type="text"><![CDATA[思路： 1、容器flex布局 2、图片定高、超出换行 3、图片都设置 flex-grow: 1; 以充满整行 4、图片都设置 object-fit: cover; 以解决图片变形 5、容器 :after 伪类 设置 flex-grow: 9999; 且值足够高 以解决最后一行图片数量少时仍然充满整行过于扁长 实现效果： html代码： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455&lt;!DOCTYPE html&gt; &lt;script&gt; window.navigator.appVersion.indexOf('Trident') != -1 &amp;&amp; alert('请用谷歌或火狐新版打开！'); &lt;/script&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;title&gt;&lt;/title&gt; &lt;style type="text/css"&gt; *&#123; margin: 0; &#125; body&#123; padding: 50px 0; overflow-x: hidden; &#125; .wrap&#123; display: flex; flex-wrap: wrap; &#125; .wrap img&#123; margin: 3px; padding: 5px; height: 200px; background: #ccc; flex-grow: 1; object-fit: cover; transition: .3s; &#125; .wrap:after&#123; display: block; content: ''; flex-grow: 9999; &#125; .wrap img:hover&#123; transform: scale(1.2); box-shadow: 0 0 20px #fff; z-index: 9999; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div class="wrap"&gt;&lt;/div&gt; &lt;script&gt; var wrap = document.querySelector('.wrap'); var src = ['//cdn.attach.qdfuns.com/notes/pics/201710/13/093715yf2jt47tttj9lyfj.jpg','//cdn.attach.qdfuns.com/notes/pics/201710/13/092835ebbkfzjtb4okwj2b.jpg','//cdn.attach.qdfuns.com/notes/pics/201710/13/092835beqzk6kyjkbwr5bw.jpg','//cdn.attach.qdfuns.com/notes/pics/201710/13/092835nshkii0i2k0dsikn.jpg','//cdn.attach.qdfuns.com/notes/pics/201710/13/093653k6ztcd7x7czebkfh.jpg'] for(var i=0; i&lt;Math.floor(Math.random()*10+30); i++)&#123; var img = document.createElement('img'); img.src = src[Math.floor(Math.random()*5)]; wrap.appendChild(img); &#125; &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>css3</tag>
        <tag>布局</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[H5项目常见问题汇总及解决方案]]></title>
    <url>%2Fposts%2F3ed9d901%2F</url>
    <content type="text"><![CDATA[H5页面窗口自动调整到设备宽度，并禁止用户缩放页面1234567891011121314151617181920212223//一、HTML页面结构&lt;meta name="viewport" content="width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no" /&gt;// width 设置viewport宽度，为一个正整数，或字符串‘device-width’// height 设置viewport高度，一般设置了宽度，会自动解析出高度，可以不用设置// initial-scale 默认缩放比例，为一个数字，可以带小数// minimum-scale 允许用户最小缩放比例，为一个数字，可以带小数// maximum-scale 允许用户最大缩放比例，为一个数字，可以带小数// user-scalable 是否允许手动缩放//二、JS动态判断var phoneWidth = parseInt(window.screen.width);var phoneScale = phoneWidth/640;var ua = navigator.userAgent;if (/Android (\d+\.\d+)/.test(ua))&#123; var version = parseFloat(RegExp.$1); if(version&gt;2.3)&#123; document.write('&lt;meta name="viewport" content="width=640, minimum-scale = '+phoneScale+', maximum-scale = '+phoneScale+', target-densitydpi=device-dpi"&gt;'); &#125;else&#123; document.write('&lt;meta name="viewport" content="width=640, target-densitydpi=device-dpi"&gt;'); &#125;&#125; else &#123; document.write('&lt;meta name="viewport" content="width=640, user-scalable=no, target-densitydpi=device-dpi"&gt;');&#125; 空白页基本meta标签12345678&lt;!-- 设置缩放 --&gt;&lt;meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no, minimal-ui" /&gt;&lt;!-- 可隐藏地址栏，仅针对IOS的Safari（注：IOS7.0版本以后，safari上已看不到效果） --&gt;&lt;meta name="apple-mobile-web-app-capable" content="yes" /&gt;&lt;!-- 仅针对IOS的Safari顶端状态条的样式（可选default/black/black-translucent ） --&gt;&lt;meta name="apple-mobile-web-app-status-bar-style" content="black" /&gt;&lt;!-- IOS中禁用将数字识别为电话号码/忽略Android平台中对邮箱地址的识别 --&gt;&lt;meta name="format-detection"content="telephone=no, email=no" /&gt; 其他meta标签12345678910111213141516171819202122&lt;!-- 启用360浏览器的极速模式(webkit) --&gt;&lt;meta name="renderer" content="webkit"&gt;&lt;!-- 避免IE使用兼容模式 --&gt;&lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;&lt;!-- 针对手持设备优化，主要是针对一些老的不识别viewport的浏览器，比如黑莓 --&gt;&lt;meta name="HandheldFriendly" content="true"&gt;&lt;!-- 微软的老式浏览器 --&gt;&lt;meta name="MobileOptimized" content="320"&gt;&lt;!-- uc强制竖屏 --&gt;&lt;meta name="screen-orientation" content="portrait"&gt;&lt;!-- QQ强制竖屏 --&gt;&lt;meta name="x5-orientation" content="portrait"&gt;&lt;!-- UC强制全屏 --&gt;&lt;meta name="full-screen" content="yes"&gt;&lt;!-- QQ强制全屏 --&gt;&lt;meta name="x5-fullscreen" content="true"&gt;&lt;!-- UC应用模式 --&gt;&lt;meta name="browsermode" content="application"&gt;&lt;!-- QQ应用模式 --&gt;&lt;meta name="x5-page-mode" content="app"&gt;&lt;!-- windows phone 点击无高光 --&gt;&lt;meta name="msapplication-tap-highlight" content="no"&gt; 移动端如何定义字体font-family1234567891011121314151617@ --------------------------------------中文字体的英文名称@ 宋体 SimSun@ 黑体 SimHei@ 微信雅黑 Microsoft Yahei@ 微软正黑体 Microsoft JhengHei@ 新宋体 NSimSun@ 新细明体 MingLiU@ 细明体 MingLiU@ 标楷体 DFKai-SB@ 仿宋 FangSong@ 楷体 KaiTi@ 仿宋_GB2312 FangSong_GB2312@ 楷体_GB2312 KaiTi_GB2312@@ 说明：中文字体多数使用宋体、雅黑，英文用Helveticabody &#123; font-family: Microsoft Yahei,SimSun,Helvetica; &#125; 打电话发短信写邮件怎么实现 一、打电话1&lt;a href="tel:400-10086"&gt;打电话给:400-10086&lt;/a&gt; 二、发短信，winphone系统无效1&lt;a href="sms:10086"&gt;发短信给: 10086&lt;/a&gt; 三、写邮件注：在添加这些功能时，第一个功能以”?”开头，后面的以”&amp;”开头1.普通邮件 1&lt;a href="mailto:123456@qq.com"&gt;点击我发邮件&lt;/a&gt; 2.收件地址后添加?cc=开头，可添加抄送地址（Android存在兼容问题） 1&lt;a href="mailto:863139978@qq.com?cc=zhangqian0406@yeah.net"&gt;点击我发邮件&lt;/a&gt; 3.跟着抄送地址后，写上&amp;bcc=,可添加密件抄送地址（Android存在兼容问题） 1&lt;a href="mailto:863139978@qq.com?cc=zhangqian0406@yeah.net&amp;bcc=384900096@qq.com"&gt;点击我发邮件&lt;/a&gt; 4.包含多个收件人、抄送、密件抄送人，用分号(;)隔开多个邮件人的地址 1&lt;a href="mailto:863139978@qq.com;384900096@qq.com"&gt;点击我发邮件&lt;/a&gt; 5.包含主题，用?subject= 1&lt;a href="mailto:863139978@qq.com?subject=邮件主题"&gt;点击我发邮件&lt;/a&gt; 6.包含内容，用?body=;如内容包含文本，使用%0A给文本换行 1&lt;a href="mailto:863139978@qq.com?body=邮件主题内容%0A腾讯诚信%0A期待您的到来"&gt;点击我发邮件&lt;/a&gt; 7.内容包含链接，含http(s)://等的文本自动转化为链接 1&lt;a href="mailto:863139978@qq.com?body=http://www.baidu.com"&gt;点击我发邮件&lt;/a&gt; 8.内容包含图片（PC不支持） 12&lt;a href="mailto:863139978@qq.com?body=&lt;img src='images/1.jpg' /&gt;"&gt;点击我发邮件&lt;/a&gt; 9.完整示例 1&lt;a href="mailto:863139978@qq.com;384900096@qq.com?cc=zhangqian0406@yeah.net&amp;bcc=993233461@qq.com&amp;subject=[邮件主题]&amp;body=腾讯诚邀您参与%0A%0Ahttp://www.baidu.com%0A%0A&lt;img src='images/1.jpg' /&gt;"&gt;点击我发邮件&lt;/a&gt; 移动端touch事件（区分webkit和winphone）当用户手指放在移动设备在屏幕上滑动会触发的touch事件以下支持webkit—touchstart:当手指触碰屏幕时候发生。不管当前有多少只手指—touchmove:当手指在屏幕上滑动时连续触发。通常我们再滑屏页面，会调用-event的preventDefault()可以阻止默认情况的发生：阻止页面滚动—touchend:当手指离开屏幕时触发—touchcancel:系统停止跟踪触摸时候会触发。例如在触摸过程中突然页面alert()一个提示框，此时会触发该事件，这个事件比较少用 TouchEvent说明：—touches：屏幕上所有手指的信息—targetTouches：手指在目标区域的手指信息—changedTouches：最近一次触发该事件的手指信息—touchend时，touches与targetTouches信息会被删除，changedTouches保存的最后一次的信息，最好用于计算手指信息 参数信息(changedTouches[0])clientX、clientY在显示区的坐标target：当前元素 事件响应顺序 ontouchstart &gt; ontouchmove &gt; ontouchend &gt; onclick 以下支持winphone 8MSPointerDown——当手指触碰屏幕时候发生。不管当前有多少只手指MSPointerMove——当手指在屏幕上滑动时连续触发。通常我们再滑屏页面，会调用css的html{-ms-touch-action: none;}可以阻止默认情况的发生：阻止页面滚动MSPointerUp——当手指离开屏幕时触发 移动端click屏幕产生200-300ms的延时响应移动设备上的web网页是有300ms延迟的，玩玩会造成按钮点击延迟甚至是点击失效。 以下是历史原因，来源一个公司内一个同事的分享：2007年苹果发布首款iphone上IOS系统搭载的safari为了将适用于PC端上大屏幕的网页能比较好的展示在手机端上，使用了双击缩放(double tap to zoom)的方案，比如你在手机上用浏览器打开一个PC上的网页，你可能在看到页面内容虽然可以撑满整个屏幕，但是字体、图片都很小看不清，此时可以快速双击屏幕上的某一部分，你就能看清该部分放大后的内容，再次双击后能回到原始状态。 双击缩放是指用手指在屏幕上快速点击两次，iOS 自带的 Safari 浏览器会将网页缩放至原始比例。 原因就出在浏览器需要如何判断快速点击上，当用户在屏幕上单击某一个元素时候，例如跳转链接&lt;a href=&quot;#&quot;&gt;&lt;/a&gt;，此处浏览器会先捕获该次单击，但浏览器不能决定用户是单纯要点击链接还是要双击该部分区域进行缩放操作，所以，捕获第一次单击后，浏览器会先Hold一段时间t，如果在t时间区间里用户未进行下一次点击，则浏览器会做单击跳转链接的处理，如果t时间里用户进行了第二次单击操作，则浏览器会禁止跳转，转而进行对该部分区域页面的缩放操作。那么这个时间区间t有多少呢？在IOS safari下，大概为300毫秒。这就是延迟的由来。造成的后果用户纯粹单击页面，页面需要过一段时间才响应，给用户慢体验感觉，对于web开发者来说是，页面js捕获click事件的回调函数处理，需要300ms后才生效，也就间接导致影响其他业务逻辑的处理。 解决方案：fastclick可以解决在手机上点击事件的300ms延迟zepto的touch模块，tap事件也是为了解决在click的延迟问题 Rentina显示屏原理及设计方案retina屏是一种具备超高像素密度的液晶屏，同样大小的屏幕上显示的像素点由1个变为多个，如在同样带下的屏幕上，苹果设备的retina显示屏中，像素点1个变为4个。在高清显示屏中的位图被放大，图片会变得模糊，因此移动端的视觉稿通常会设计为传统PC的2倍。那么，前端的应对方案是：设计稿切出来的图片长宽保证为偶数，并使用backgroud-size把图片缩小为原来的1/2 例如图片宽高为：200px*200px，那么写法如下 1.css&#123;width:100px;height:100px;background-size:100px 100px;&#125; 其它元素的取值为原来的1/2，例如视觉稿40px的字体，使用样式的写法为2.css{font-size:20px}ge-set设计Rentina背景图image-set,webkit私有属性，也是CSS4的属性，为解决Rentina屏幕下的图像而生。123456.css &#123; background: url(images/bg.jpg) no-repeat center; background: -webkit-image-set( url(images/bg.jpg) 1x, //支持image-set普通屏 url(images/bg-2x.jpg) 2x); //支持image-set的Rentinan&#125; 点击元素产生背景或边框怎么去掉ios用户点击一个链接，会出现一个半透明灰色遮罩, 如果想要禁用，可设置-webkit-tap-highlight-color的alpha值为0去除灰色半透明遮罩； android用户点击一个链接，会出现一个边框或者半透明灰色遮罩, 不同生产商定义出来额效果不一样，可设置-webkit-tap-highlight-color的alpha值为0去除部分机器自带的效果； winphone系统,点击标签产生的灰色半透明背景，能通过设置&lt;meta name=&quot;msapplication-tap-highlight&quot; content=&quot;no&quot;&gt;去掉； 特殊说明：有些机型去除不了，如小米2。对于按钮类还有个办法，不使用a或者input标签，直接用div标签 1234a,button,input,textarea &#123; -webkit-tap-highlight-color: rgba(0,0,0,0); -webkit-user-modify:read-write-plaintext-only; //-webkit-user-modify &#125; 有个副作用，就是输入法不再能够输入多个字符也可以 * { -webkit-tap-highlight-color: rgba(0,0,0,0); }winphone下&lt;meta name=&quot;msapplication-tap-highlight&quot; content=&quot;no&quot;&gt; 美化表单元素一、使用appearance改变webkit浏览器的默认外观 1input,select &#123; -webkit-appearance:none; appearance: none; &#125; 二、winphone下，使用伪元素改变表单元素默认外观1.禁用select默认箭头，::-ms-expand修改表单控件下拉箭头，设置隐藏并使用背景图片来修饰 1select::-ms-expand &#123; display:none; &#125; 2.禁用radio和checkbox默认样式，::-ms-check修改表单复选框或单选框默认图标，设置隐藏并使用背景图片来修饰 123input[type=radio]::-ms-check,input[type=checkbox]::-ms-check &#123; display:none; &#125; 禁用pc端表单输入框默认清除按钮，::-ms-clear修改清除按钮，设置隐藏并使用 背景图片来修饰 123input[type=text]::-ms-clear,input[type=tel]::-ms-clear,input[type=number]::-ms-clear &#123; display:none; &#125; 移动端字体单位font-size选择px还是rem如需适配多种移动设备，建议使用rem。以下为参考值： 1html &#123; font-size: 62.5%; &#125; //10*16 = 62.5% 设置12px字体 这里注意在rem前要加上对应的px值，解决不支持rem的浏览器的兼容 问题，做到优雅降级 1body &#123; font-size:12px; font-size:1.2rem; &#125; 超实用的CSS样式123456789101112131415161718192021222324252627282930313233//去掉webkit的滚动条——display: none;//其他参数::-webkit-scrollba //滚动条整体部分::-webkit-scrollbar-thumb //滚动条内的小方块::-webkit-scrollbar-track //滚动条轨道::-webkit-scrollbar-button //滚动条轨道两端按钮::-webkit-scrollbar-track-piece //滚动条中间部分，内置轨道::-webkit-scrollbar-corner //边角，两个滚动条交汇处::-webkit-resizer //两个滚动条的交汇处上用于通过拖动调整元素大小的小控件// 禁止长按链接与图片弹出菜单a,img &#123; -webkit-touch-callout: none &#125;// 禁止ios和android用户选中文字html,body &#123;-webkit-user-select:none; user-select: none; &#125;// 改变输入框placeholder的颜色值::-webkit-input-placeholder &#123; /* WebKit browsers */color: #999; &#125;:-moz-placeholder &#123; /* Mozilla Firefox 4 to 18 */color: #999; &#125;::-moz-placeholder &#123; /* Mozilla Firefox 19+ */color: #999; &#125;:-ms-input-placeholder &#123; /* Internet Explorer 10+ */color: #999; &#125;input:focus::-webkit-input-placeholder&#123; color:#999; &#125;// android上去掉语音输入按钮input::-webkit-input-speech-button &#123;display: none&#125;// 阻止windows Phone的默认触摸事件/*说明：winphone下默认触摸事件事件使用e.preventDefault是无效的，可通过样式来禁用，如：*/html &#123; -ms-touch-action:none; &#125; //禁止winphone默认触摸事件 取消input在ios下，输入的时候英文首字母的默认大写1&lt;input autocapitalize="off" autocorrect="off" /&gt; 手机拍照和上传图片 IOS有拍照、录像、选取本地图片功能，部分Android只有选择本地图片功能。 Winphone不支持12&lt;input type="file" accept="images/*" /&gt;&lt;input type="file" accept="video/*" /&gt; 屏幕旋转的事件和样式1234567891011121314151617181920 //JS处理function orientInit()&#123; var orientChk = document.documentElement.clientWidth &gt; document.documentElement.clientHeight?'landscape':'portrait'; if(orientChk =='lapdscape')&#123; //这里是横屏下需要执行的事件 &#125;else&#123; //这里是竖屏下需要执行的事件 &#125;&#125;orientInit();window.addEventListener('onorientationchange' in window?'orientationchange':'resize', function()&#123; setTimeout(orientInit, 100);&#125;,false)//CSS处理//竖屏时样式@media all and (orientation:portrait)&#123; &#125;//横屏时样式@media all and (orientation:landscape)&#123; &#125; audio元素和video元素在ios和andriod中无法自动播放音频，写法一 1&lt;audio src="music/bg.mp3" autoplay loop controls&gt;你的浏览器还不支持哦&lt;/audio&gt; 音频，写法二 12345 &lt;audio controls="controls"&gt; &lt;source src="music/bg.ogg" type="audio/ogg"&gt;&lt;/source&gt; &lt;source src="music/bg.mp3" type="audio/mpeg"&gt;&lt;/source&gt; 优先播放音乐bg.ogg，不支持在播放bg.mp3&lt;/audio&gt; JS绑定自动播放（操作window时，播放音乐） 123 $(window).one('touchstart', function()&#123; music.play();&#125;) 微信下兼容处理 1234 document.addEventListener("WeixinJSBridgeReady", function () &#123; music.play();&#125;, false); 小结 audio元素的autoplay属性在IOS及Android上无法使用，在PC端正常 audio元素没有设置controls时，在IOS及Android会占据空间大小，而在PC端Chrome是不会占据任何空间 重力感应事件123456789101112131415161718192021222324 // 运用HTML5的deviceMotion，调用重力感应事件if(window.DeviceMotionEvent)&#123; document.addEventListener('devicemotion', deviceMotionHandler, false)&#125;var speed = 30;var x = y = z = lastX = lastY = lastZ = 0;function deviceMotionHandler(eventData)&#123; var acceleration = event.accelerationIncludingGravity; x = acceleration.x; y = acceleration.y; z = acceleration.z; if(Math.abs(x-lastX)&gt;speed || Math.abs(y-lastY)&gt;speed || Math.abs(z-lastZ)&gt;speed )&#123; //这里是摇动后要执行的方法 yaoAfter(); &#125; lastX = x; lastY = y; lastZ = z;&#125;function yaoAfter()&#123; //do something&#125; 阻止用户调整微信浏览器字体大小以下代码可使Android机页面不再受用户字体缩放强制改变大小，但是会有1S左右延时，期间可以考虑loading来处理123456789101112131415 if (typeof(WeixinJSBridge) == "undefined") &#123; document.addEventListener("WeixinJSBridgeReady", function (e) &#123; setTimeout(function()&#123; WeixinJSBridge.invoke('setFontSizeCallback', &#123; 'fontSize':0&#125;, function(res)&#123; alert(JSON.stringify(res)); &#125;) &#125;, 0) &#125;);&#125;else&#123; setTimeout(function()&#123; WeixinJSBridge.invoke('setFontSizeCallback', &#123; 'fontSize':0&#125;, function(res)&#123; alert(JSON.stringify(res)); &#125;) &#125;, 0)&#125; IOS下可使用 -webkit-text-size-adjust禁止用户调整字体大小 body { -webkit-text-size-adjust:100%!important; } 最好的解决方案：最好使用rem或百分比布局 定位的坑fixed定位 ios下fixed元素容易定位出错，软键盘弹出时，影响fixed元素定位 android下fixed表现要比iOS更好，软键盘弹出时，不会影响fixed元素定位 ios4下不支持position:fixed.解决方案：使用Iscroll，如：1234567891011121314 &lt;div id="wrapper"&gt; &lt;ul&gt; &lt;li&gt;&lt;/li&gt; ..... &lt;/ul&gt;&lt;/div&gt;&lt;script src="iscroll.js"&gt;&lt;/script&gt;&lt;script&gt; var myscroll; function loaded()&#123; myscroll=new iScroll("wrapper"); &#125; window.addEventListener("DOMContentLoaded",loaded,false);&lt;/script&gt; position定位Android下弹出软键盘弹出时，影响absolute元素定位,解决方案:12345678 var ua = navigator.userAgent.indexOf('Android');if(ua&gt;-1)&#123; $('.ipt').on('focus', function()&#123; $('.css').css(&#123;'visibility':'hidden'&#125;) &#125;).on('blur', function()&#123; $('.css').css(&#123;'visibility':'visible'&#125;) &#125;)&#125; 播放视频不全屏 ios7+支持自动播放 支持Airplay的设备（如：音箱、Apple TV):x-webkit-airplay=”true” 放视频不全屏:webkit-playsinline=&quot;true&quot; 1&lt;video x-webkit-airplay="true" webkit-playsinline="true" preload="auto" autoplay src="http://"&gt;&lt;/video&gt; JS判断设备12345678910111213 function deviceType()&#123; var ua = navigator.userAgent; var agent = ["Android", "iPhone", "SymbianOS", "Windows Phone", "iPad", "iPod"]; for(var i=0; i&lt;len,len = agent.length; i++)&#123; if(ua.indexOf(agent[i])&gt;0)&#123; break; &#125; &#125;&#125;deviceType();window.addEventListener('resize', function()&#123; deviceType();&#125;) JS判断微信浏览器12345678 function isWeixin()&#123; var ua = navigator.userAgent.toLowerCase(); if(ua.match(/MicroMessenger/i)=='micromessenger')&#123; return true; &#125;else&#123; return false; &#125;&#125; android 2.3 bug @-webkit-keyframes 需要以0%开始100%结束，0%的百分号不能去掉 after和before伪类无法使用动画animation border-radius不支持%单位，如要兼容，可以给radius设置一下较大的值 translate百分比的写法和scale在一起会导致失效，例如： 1-webkit-transform: translate(-50%,-50%) scale(-0.5, 1) android 4.x bug 三星 Galaxy S4中自带浏览器不支持border-radius缩写 同时设置border-radius和背景色的时候，背景色会溢出到圆角以外部分 部分手机(如三星)，a链接支持鼠标:visited事件，也就是说链接访问后文字变为紫色 android无法同时播放多音频audio 消除transition闪屏目前，像Chrome/Filefox/Safari/IE9+以及最新版本Opera都支持硬件加速，当检测到某个DOM元素应用了某些CSS规则时就会自动开启，从而解决页面闪白，保证动画流畅。123456 .css &#123; -webkit-transform: translate3d(0,0,0); -moz-transform: translate3d(0,0,0); -ms-transform: translate3d(0,0,0); transform: translate3d(0,0,0);&#125; 渲染优化 禁止使用iframe（阻塞父文档onload事件） 禁止使用gif图片实现loading效果（降低CPU消耗，提升渲染性能）— 使用CSS3代码代替JS动画；开启GPU加速；— 使用base64位编码图片(不小图而言，大图不建议使用)— 对于一些小图标，可以使用base64位编码，以减少网络请求。但不建议大图使用，比较耗费CPU。小图标优势在于： 1.减少HTTP请求； 2.避免文件跨域； 3.修改及时生效； 获取音频总时长 (注意：手机端使用Media 事件用 addEventListener绑定 直接使用onplaying、onpause、onended、ontimeupdate无效)123456789101112 getTime(); //获取音频总时长function getTime() &#123; setTimeout(function () &#123; var duration = audio.duration; if(!duration || ( navigator.userAgent.indexOf('UCBrowser') &gt; -1 &amp;&amp; duration == 1 ))&#123; //此处手机UC浏览器第一次会返回1 如果是UC浏览器并且值为1就继续获取音频长 getTime(); &#125;else&#123; totalTime = audio.duration; console.log(totalTime) &#125; &#125;, 10);&#125; 部分IOS手机safari浏览器点击后退字体变大1body&#123;-webkit-text-size-adjust: none;&#125;]]></content>
      <categories>
        <category>H5</category>
      </categories>
      <tags>
        <tag>H5</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[css小细节总结]]></title>
    <url>%2Fposts%2Fb565c126%2F</url>
    <content type="text"><![CDATA[max-width 防止图片撑破容器1234 img &#123; display:inline-block; max-width: 100%;&#125; pointer-event 禁用事件,该属性可以做以下事：阻止任何点击动作的执行;使链接显示为默认光标（cursor:default）;阻止触发hover和active状态;阻止JavaScript点击事件的触发; 12//使用该类，任何点击事件将无效.disabled &#123; pointer-events: none; &#125; overflow 清楚浮动overflow除了定义溢出元素内容区的内容会如何处理外，还可以创建块格式化上下文，清除浮动。 1234&lt;div class="clearfix"&gt; &lt;div class="left"&gt;left&lt;/div&gt; &lt;div class="right"&gt;right&lt;/div&gt;&lt;/div&gt; 123.clearfix &#123; overflow: hidden;&#125; user-select 禁用文本选中IE6-9不支持该属性，可以通过给body添加onselectstart=&quot;return false;&quot;的内联JavaScript语句搞定。 123body&#123; user-select: none; //页面中的文本不能被选中&#125; caret-color 自定义光标的样式123input,textarea,[contenteditable] &#123; caret-color: red;&#125; table-layout 控制表格单元格宽度,由于表格单元格的宽度根据其内容进行调整，也许你设置了表格的宽度，但是不起作用；刨根揭底，是因为表格有个叫做table-layout的属性，其浏览器默认值是auto在作怪。当我们把这个值设置为fixed的时候，给th/td标签设置的宽度就起作用了。 1234table &#123; table-layout: fixed; width: 100%;&#125; :valid :invalid 做表单及时验证.:required 伪类指定具有required 属性的表单元素;:valid 伪类指定一个通过匹配正确的所要求的表单元素;:invalid 伪类指定一个不匹配指定要求的表单元素; 12345678910111213141516171819202122&lt;div class="container"&gt; &lt;div class="row" style="margin-top: 2rem;"&gt; &lt;form&gt; &lt;div class="form-group"&gt; &lt;label&gt;name&lt;/label&gt; &lt;input type="text" required placeholder="请输入名称"&gt; &lt;/div&gt; &lt;div class="form-group"&gt; &lt;label&gt;email&lt;/label&gt; &lt;input type="email" required placeholder="请输入邮箱"&gt; &lt;/div&gt; &lt;div class="form-group"&gt; &lt;label&gt;homepage&lt;/label&gt; &lt;input type="url" placeholder="请输入博客url"&gt; &lt;/div&gt; &lt;div class="form-group"&gt; &lt;label&gt;Comments&lt;/label&gt; &lt;textarea required&gt;&lt;/textarea&gt; &lt;/div&gt; &lt;/form&gt; &lt;/div&gt; &lt;/div&gt; 12345678910111213141516171819202122232425262728293031.form-group &#123; width: 32rem; padding: 1rem; border: 1px solid transparent;&#125;.form-group：hover&#123; border-color: #eee; transition: border .2s;&#125;.form-group label &#123; display: block; font-weight: normal;&#125;.form-group input,.form-group textarea &#123; display: block; width: 100%; line-height: 2rem; padding: .5rem .5rem .5rem 1rem; border: 1px solid #ccc; outline: none;&#125;.form-group input:valid ,.form-group textarea:valid &#123; border-color: #429032; box-shadow: inset 5px 0 0 #429032;&#125;.form-group input:invalid ,.form-group textarea:invalid &#123; border-color: #D61D1D; box-shadow: inset 5px 0 0 #D61D1D;&#125; :target 实现折叠面板1234567891011121314151617181920212223&lt;div class="container"&gt; &lt;div class="row" style="margin-top: 2rem;"&gt; &lt;div class="t-collapse"&gt;&lt;a class="collapse-target" href="#modal1"&gt;target 1&lt;/a&gt; &lt;div class="collapse-body" id="modal1"&gt; &lt;a class="collapse-close" href="#"&gt;target 1&lt;/a&gt; &lt;p&gt; css3 明确规定了伪类用一个冒号:来表示，而伪元素则用两个冒号::来表示。 伪类更多的定义的是状态，如:hover，或者说是一个可以使用CSS进行修饰的特定的特殊元素，如:first-child 常见伪类：:hover :active :focus :visited :link :lang :first-child :last-child :not &lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="t-collapse"&gt;&lt;a class="collapse-target" href="#modal2"&gt;target 2&lt;/a&gt; &lt;div class="collapse-body" id="modal2"&gt; &lt;a class="collapse-close" href="#"&gt;target 2&lt;/a&gt; &lt;p&gt; 伪元素简单来说就是不存在于DOM文档树中的虚拟的元素，它们和HTML元素一样，但是你又无法使用JavaScript去获取，如:before 常见伪元素：::before ::after ::first-letter ::first-line &lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; 1234567891011121314151617181920212223242526272829303132333435363738.t-collapse &#123; border: 1px solid #ccc; margin-top: -1px; &amp;:first-child &#123; margin-top: 0; &#125; .collapse-target,.collapse-close &#123; cursor: pointer; height: 3rem; line-height: 2rem; padding: .5rem 2rem; text-decoration: none; user-select: none; background: #eee; &#125; &gt;.collapse-target &#123; display: block; &#125; &gt;.collapse-body &#123; position: relative; display: none; padding: 2rem; .collapse-close &#123; display: none; position: absolute; top: -3rem; width: 100%; left: 0; &#125; &amp;:target &#123; display: block; .collapse-close &#123; display: block; border-bottom: 1px solid #ddd; &#125; &#125; &#125;&#125; :not 排除其他选择器用以设置表单元素在readonly 和 disabled状态之外的hover等状态，以便于当元素在readonly 和 disabled时，元素不具有hover状态。 12345678910111213@mixin buttonStyle ($border, $background, $color, $hoverBorder, $hoverBackground, $hoverColor) &#123; color: $color; border-color: $border; background-color: $background; &amp;:not(.readonly):not([readonly]):not(.disabled):not([disabled]) &#123; &amp;:hover, &amp;:active &#123; color: $hoverColor; border-color: $hoverBorder; background-color: $hoverBackground; &#125; &#125;&#125; :nth-child(even/odd) 实现隔行变色123456789101112ul &#123; &amp;.odd &#123; &gt;li:nth-child(odd) &#123; background: red; &#125; &#125; &amp;.even &#123; &gt;li:nth-child(even) &#123; background: green; &#125; &#125;&#125; ::selection 美化选中文本1234::selection&#123; color: #fff; background-color: #6bc30d;&#125; ::placeholder 美化占位符123456789input::-webkit-input-placeholder&#123; color: #f00;&#125;input::-moz-placeholder&#123; color: #f00;&#125;input:-ms-input-placeholder&#123; color: #f00;&#125; ::first-letter 实现段落首字下沉12345p::first-letter&#123; font-size: 6em; line-height: 1; float: left;&#125; ::first-line 特殊标记段落第一行123p::first-line&#123; color: red&#125; font-size:0 清除间距123456&lt;div class="items"&gt; &lt;div class="item"&gt;1&lt;/div&gt; &lt;div class="item"&gt;2&lt;/div&gt; &lt;div class="item"&gt;3&lt;/div&gt; &lt;div class="item"&gt;4&lt;/div&gt;&lt;/div&gt; 12345678910111213141516*&#123; box-sizing: border-box;&#125;.items &#123; font-size: 0; &gt; .item &#123; display: inline-block; width: 25%; height: 50px; border: 1px solid #ccc; text-align: center; line-height: 50px; background-color: #eee; font-size: 16px; //不要忘了给子元素设置字号 &#125;&#125;]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>css3</tag>
      </tags>
  </entry>
</search>
