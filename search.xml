<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[纯代码实现侧边栏显示社交按钮组]]></title>
    <url>%2F2017%2F10%2F19%2F%E7%BA%AF%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%E4%BE%A7%E8%BE%B9%E6%A0%8F%E6%98%BE%E7%A4%BA%E7%A4%BE%E4%BA%A4%E6%8C%89%E9%92%AE%E7%BB%84%2F</url>
    <content type="text"><![CDATA[其实想要实现这个功能也是挺简单的，有两种办法! 方法1： 纯html代码实现(优点：添加很简单，只需把html代码粘贴到小工具中的文本中即可。缺点：更改相对麻烦）把下面内容改成自己的。 12345678&lt;div class="textwidget"&gt;&lt;a class="tweibo" style="padding-left: 12px;" href="http://wpa.qq.com/msgrd?v=3&amp;amp;uin=你的QQ号&amp;amp;site=qq&amp;amp;menu=yes" target="_blank" rel="external nofollow"&gt;&lt;i class="fa fa-qq"&gt;&lt;/i&gt; 在线服务&lt;/a&gt;&lt;a class="tweibo" style="padding-left: 12px;" href="http://weibo.com/你的微博" target="_blank" rel="external nofollow"&gt;&lt;i class="fa fa-weibo"&gt;&lt;/i&gt; 微博&lt;/a&gt;&lt;a class="tweibo" style="padding-left: 12px;" href="http://t.qq.com/你的企鹅微博" target="_blank" rel="external nofollow"&gt;&lt;i class="fa fa-tencent-weibo"&gt;&lt;/i&gt; 腾讯微博&lt;/a&gt;&lt;a class="rss" style="padding-left: 12px;" href="https://laod.cn/go?url=http://laid.cn/s/你的网址" target="_blank"&gt;&lt;i class="fa fa-paw"&gt;&lt;/i&gt; 百度口碑&lt;/a&gt;&lt;/div&gt; 方法2： 通过funtions增加自定义用户资料，然后通过函数调用。 先加代码到当前主题文件夹下的funtions.php中，代码如下： 12345678//自定义用户资料add_filter( 'user_contactmethods', 'yeziting_add_contact_fields' );function yeziting_add_contact_fields( $contactmethods ) &#123;$contactmethods['qq'] = 'QQ';$contactmethods['qq_weibo'] = '腾讯微博';$contactmethods['sina_weibo'] = '新浪微博';$contactmethods['donate'] = '百度口碑';&#125; 然后再加代码到sidebar.php文件中。代码如下。（修改的话直接进后台的个人资料中填写。QQ直接写QQ号即可。微博：http://weibo.com/你的微博地址。腾讯微博同样如此，百度口碑写自己的网址即。 12345&lt;div class="textwidget"&gt;&lt;a class="tweibo" style="padding-left: 12px;" href="http://wpa.qq.com/msgrd?v=3&amp;amp;uin=&amp;lt;?php the_author_meta( 'qq' );?&amp;gt;&amp;amp;site=qq&amp;amp;menu=yes" target="_blank" rel="external nofollow"&gt;&lt;i class="fa fa-qq"&gt;&lt;/i&gt; QQ交谈&lt;/a&gt; &lt;a class="tweibo" style="padding-left: 12px;" href="&amp;quot;http://weibo.com/&amp;lt;?php"&gt;"target="_blank" rel="external nofollow"&amp;gt;&lt;i class="fa fa-weibo"&gt;&lt;/i&gt; 微博&lt;/a&gt; &lt;a class="tweibo" style="padding-left: 12px;" href="http://t.qq.com/&amp;lt;?php the_author_meta( 'qq_weibo' );?&amp;gt;" target="_blank" rel="external nofollow"&gt;&lt;i class="fa fa-tencent-weibo"&gt;&lt;/i&gt; 腾讯微博&lt;/a&gt; style="padding-left: 12px;" href="http://koubei.baidu.com/s/&lt;!--?php the_author_meta( 'donate' );?--&gt;" target="_blank"&amp;gt;&lt;i class="fa fa-paw"&gt;&lt;/i&gt; 百度口碑&lt;/div&gt; CSS代码： 12345678910.textwidget &#123;padding: 15px;color: #777;&#125;.textwidget a &#123;color: #777;&#125;.textwidget a:hover &#123;color: #45B6F7;&#125;]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>按钮</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[css3实现图片木桶布局]]></title>
    <url>%2F2016%2F10%2F05%2Fcss3%E5%AE%9E%E7%8E%B0%E5%9B%BE%E7%89%87%E6%9C%A8%E6%A1%B6%E5%B8%83%E5%B1%80%2F</url>
    <content type="text"><![CDATA[思路： 1、容器flex布局 2、图片定高、超出换行 3、图片都设置 flex-grow: 1; 以充满整行 4、图片都设置 object-fit: cover; 以解决图片变形 5、容器 :after 伪类 设置 flex-grow: 9999; 且值足够高 以解决最后一行图片数量少时仍然充满整行过于扁长 实现效果： html代码： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556&lt;!DOCTYPE html&gt; &lt;script&gt; window.navigator.appVersion.indexOf('Trident') != -1 &amp;&amp; alert('请用谷歌或火狐新版打开！'); &lt;/script&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;title&gt;&lt;/title&gt; &lt;style type="text/css"&gt; *&#123; margin: 0; &#125; body&#123; padding: 50px 0; overflow-x: hidden; &#125; .wrap&#123; display: flex; flex-wrap: wrap; &#125; .wrap img&#123; margin: 3px; padding: 5px; height: 200px; background: #ccc; flex-grow: 1; object-fit: cover; transition: .3s; &#125; .wrap:after&#123; display: block; content: ''; flex-grow: 9999; &#125; .wrap img:hover&#123; transform: scale(1.2); box-shadow: 0 0 20px #fff; z-index: 9999; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div class="wrap"&gt;&lt;/div&gt; &lt;script&gt; var wrap = document.querySelector('.wrap'); var src = ['//cdn.attach.qdfuns.com/notes/pics/201710/13/093715yf2jt47tttj9lyfj.jpg','//cdn.attach.qdfuns.com/notes/pics/201710/13/092835ebbkfzjtb4okwj2b.jpg','//cdn.attach.qdfuns.com/notes/pics/201710/13/092835beqzk6kyjkbwr5bw.jpg','//cdn.attach.qdfuns.com/notes/pics/201710/13/092835nshkii0i2k0dsikn.jpg','//cdn.attach.qdfuns.com/notes/pics/201710/13/093653k6ztcd7x7czebkfh.jpg'] for(var i=0; i&lt;Math.floor(Math.random()*10+30); i++)&#123; var img = document.createElement('img'); img.src = src[Math.floor(Math.random()*5)]; wrap.appendChild(img); &#125; &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>css3,布局</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[css小细节总结]]></title>
    <url>%2F2016%2F08%2F12%2Fcss%E5%B0%8F%E7%BB%86%E8%8A%82%E6%80%BB%E7%BB%93%2F</url>
    <content type="text"><![CDATA[max-width 来防止图片撑破容器1234 img &#123; display:inline-block; max-width: 100%;&#125; pointer-event 来禁用事件,该属性可以做以下事：阻止任何点击动作的执行;使链接显示为默认光标（cursor:default）;阻止触发hover和active状态;阻止JavaScript点击事件的触发; 12//使用该类，任何点击事件将无效.disabled &#123; pointer-events: none; &#125; overflow 来清楚浮动overflow除了定义溢出元素内容区的内容会如何处理外，还可以创建块格式化上下文，清除浮动。 1234&lt;div class="clearfix"&gt; &lt;div class="left"&gt;left&lt;/div&gt; &lt;div class="right"&gt;right&lt;/div&gt;&lt;/div&gt; 123.clearfix &#123; overflow: hidden;&#125; user-select 来禁用文本选中IE6-9不支持该属性，可以通过给body添加onselectstart=&quot;return false;&quot;的内联JavaScript语句搞定。 123body&#123; user-select: none; //页面中的文本不能被选中&#125; caret-color 来自定义光标的样式123input,textarea,[contenteditable] &#123; caret-color: red;&#125; table-layout 来控制表格单元格宽度,由于表格单元格的宽度根据其内容进行调整，也许你设置了表格的宽度，但是不起作用；刨根揭底，是因为表格有个叫做table-layout的属性，其浏览器默认值是auto在作怪。当我们把这个值设置为fixed的时候，给th/td标签设置的宽度就起作用了。 1234table &#123; table-layout: fixed; width: 100%;&#125; :valid :invalid 来做表单及时验证.:required 伪类指定具有required 属性的表单元素;:valid 伪类指定一个通过匹配正确的所要求的表单元素;:invalid 伪类指定一个不匹配指定要求的表单元素; 12345678910111213141516171819202122&lt;div class="container"&gt; &lt;div class="row" style="margin-top: 2rem;"&gt; &lt;form&gt; &lt;div class="form-group"&gt; &lt;label&gt;name&lt;/label&gt; &lt;input type="text" required placeholder="请输入名称"&gt; &lt;/div&gt; &lt;div class="form-group"&gt; &lt;label&gt;email&lt;/label&gt; &lt;input type="email" required placeholder="请输入邮箱"&gt; &lt;/div&gt; &lt;div class="form-group"&gt; &lt;label&gt;homepage&lt;/label&gt; &lt;input type="url" placeholder="请输入博客url"&gt; &lt;/div&gt; &lt;div class="form-group"&gt; &lt;label&gt;Comments&lt;/label&gt; &lt;textarea required&gt;&lt;/textarea&gt; &lt;/div&gt; &lt;/form&gt; &lt;/div&gt; &lt;/div&gt; 12345678910111213141516171819202122232425262728293031.form-group &#123; width: 32rem; padding: 1rem; border: 1px solid transparent;&#125;.form-group：hover&#123; border-color: #eee; transition: border .2s;&#125;.form-group label &#123; display: block; font-weight: normal;&#125;.form-group input,.form-group textarea &#123; display: block; width: 100%; line-height: 2rem; padding: .5rem .5rem .5rem 1rem; border: 1px solid #ccc; outline: none;&#125;.form-group input:valid ,.form-group textarea:valid &#123; border-color: #429032; box-shadow: inset 5px 0 0 #429032;&#125;.form-group input:invalid ,.form-group textarea:invalid &#123; border-color: #D61D1D; box-shadow: inset 5px 0 0 #D61D1D;&#125; :target 来实现折叠面板1234567891011121314151617181920212223&lt;div class="container"&gt; &lt;div class="row" style="margin-top: 2rem;"&gt; &lt;div class="t-collapse"&gt;&lt;a class="collapse-target" href="#modal1"&gt;target 1&lt;/a&gt; &lt;div class="collapse-body" id="modal1"&gt; &lt;a class="collapse-close" href="#"&gt;target 1&lt;/a&gt; &lt;p&gt; css3 明确规定了伪类用一个冒号:来表示，而伪元素则用两个冒号::来表示。 伪类更多的定义的是状态，如:hover，或者说是一个可以使用CSS进行修饰的特定的特殊元素，如:first-child 常见伪类：:hover :active :focus :visited :link :lang :first-child :last-child :not &lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="t-collapse"&gt;&lt;a class="collapse-target" href="#modal2"&gt;target 2&lt;/a&gt; &lt;div class="collapse-body" id="modal2"&gt; &lt;a class="collapse-close" href="#"&gt;target 2&lt;/a&gt; &lt;p&gt; 伪元素简单来说就是不存在于DOM文档树中的虚拟的元素，它们和HTML元素一样，但是你又无法使用JavaScript去获取，如:before 常见伪元素：::before ::after ::first-letter ::first-line &lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; 1234567891011121314151617181920212223242526272829303132333435363738.t-collapse &#123; border: 1px solid #ccc; margin-top: -1px; &amp;:first-child &#123; margin-top: 0; &#125; .collapse-target,.collapse-close &#123; cursor: pointer; height: 3rem; line-height: 2rem; padding: .5rem 2rem; text-decoration: none; user-select: none; background: #eee; &#125; &gt;.collapse-target &#123; display: block; &#125; &gt;.collapse-body &#123; position: relative; display: none; padding: 2rem; .collapse-close &#123; display: none; position: absolute; top: -3rem; width: 100%; left: 0; &#125; &amp;:target &#123; display: block; .collapse-close &#123; display: block; border-bottom: 1px solid #ddd; &#125; &#125; &#125;&#125; :not 来排除其他选择器用以设置表单元素在readonly 和 disabled状态之外的hover等状态，以便于当元素在readonly 和 disabled时，元素不具有hover状态。 12345678910111213@mixin buttonStyle ($border, $background, $color, $hoverBorder, $hoverBackground, $hoverColor) &#123; color: $color; border-color: $border; background-color: $background; &amp;:not(.readonly):not([readonly]):not(.disabled):not([disabled]) &#123; &amp;:hover, &amp;:active &#123; color: $hoverColor; border-color: $hoverBorder; background-color: $hoverBackground; &#125; &#125;&#125; :nth-child(even/odd) 来实现隔行变色123456789101112ul &#123; &amp;.odd &#123; &gt;li:nth-child(odd) &#123; background: red; &#125; &#125; &amp;.even &#123; &gt;li:nth-child(even) &#123; background: green; &#125; &#125;&#125; ::selection 来美化选中文本1234::selection&#123; color: #fff; background-color: #6bc30d;&#125; ::placeholder 来美化占位符123456789input::-webkit-input-placeholder&#123; color: #f00;&#125;input::-moz-placeholder&#123; color: #f00;&#125;input:-ms-input-placeholder&#123; color: #f00;&#125; ::first-letter 来实现段落首字下沉12345p::first-letter&#123; font-size: 6em; line-height: 1; float: left;&#125; ::first-line 来特殊标记段落第一行123p::first-line&#123; color: red&#125; font-size:0 来清除间距123456&lt;div class="items"&gt; &lt;div class="item"&gt;1&lt;/div&gt; &lt;div class="item"&gt;2&lt;/div&gt; &lt;div class="item"&gt;3&lt;/div&gt; &lt;div class="item"&gt;4&lt;/div&gt;&lt;/div&gt; 12345678910111213141516*&#123; box-sizing: border-box;&#125;.items &#123; font-size: 0; &gt; .item &#123; display: inline-block; width: 25%; height: 50px; border: 1px solid #ccc; text-align: center; line-height: 50px; background-color: #eee; font-size: 16px; //不要忘了给子元素设置字号 &#125;&#125;]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>css3</tag>
      </tags>
  </entry>
</search>
