<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[一人我饮酒碎]]></title>
    <url>%2Fposts%2Fea259480%2F</url>
    <content type="text"><![CDATA[var dplayer0 = new DPlayer({"element":document.getElementById("dplayer0"),"autoplay":0,"theme":"#FADFA3","loop":1,"video":{"url":"http://oybkqi1gi.bkt.clouddn.com/yirenyinjiu.mp4","pic":"http://oybkqi1gi.bkt.clouddn.com/yiren.png"}});]]></content>
      <categories>
        <category>视频</category>
      </categories>
      <tags>
        <tag>MV</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[美网友评出最“作死”15张网红照片]]></title>
    <url>%2Fposts%2F713d9ce%2F</url>
    <content type="text"><![CDATA[今年年初，23岁的俄罗斯女模特Viki Odintcova为博眼球，在310米高的迪拜卡延塔上“荡秋千”。虽然事后被警方传唤，但她一夜之间收获几百万点击量，成为网络红人。其实，像这样“为红不要命”的不只她一个，日前，美国某网媒发起一项活动，网友们评选出15张“最会作死”的网红照片。 这位哥们叫哈利·加拉格尔（Harry Gallagher），他凭借在伦敦加拿大第一广场上的单臂悬挂入围。必须承认，这身忍者一样的打扮很酷！ 杰克·莫里斯（Jack Morris）站在泰国曼谷的一座高楼边缘，向前一步，就会坠入凡尘。 站在中国天津的一座摩天大楼上，安吉拉·尼古拉（Angela Nikolau）用自拍杆拍了一张照片。她的表情轻松自在，就像在平地一样。 一位不知名的勇者，他躺在大桥的钢索上，给人一种无限滑落的感觉。 在挪威，有一块夹在两座山峰间的岩石“Kjeragbolten”，吸引了大量冒险者爬上去拍照。而一旦失足，下方是深达1000米的山谷。 这些挑战极限的网红们，最喜欢在边缘拍照，无论是大楼、大桥或悬崖，就像这样…… 纽约摄影师Mar的作品，他让模特躺在纽约最高摩天大楼的边缘，表达人们在城市中漂泊的无助感。 这张照片拍摄于澳大利亚著名的“婚礼蛋糕岩”，它因洁白的表面酷似婚礼蛋糕而得名。地质学家说，由于自然风化，岩石随时可能坠入海中，但仍有些人不顾劝告和警示标志。 这位美女坐在加利福尼亚著名的“纸片岩”上，这块岩石非常薄，看上去随时会折断。但实际上，这石头离地只有3米，远不像看上去那样危险。 挪威的巨人之舌（Trolltunga）也是网红们作死的热门地点。挪威语里Troll是一种森林精灵，而Tunga则是舌头。因为该岩石伸出悬崖很远，如山妖突兀的魔舌，所以得名。 加州优胜美地国家公园里也有很多作死的绝佳景点，例如塔夫脱点。在这里倒立并不是个好主意！ 这张照片的拍摄地点是挪威祈祷峰，峰高604米，在上面可以欣赏到壮观的吕瑟峡湾美景。 Murad Osmann和Nataly Osmann是一对情侣，他们走遍全球，在世界各地拍摄极限照片，就像Odintcova在迪拜做的那样。 Murad Osmann和Nataly Osmann也曾到过迪拜，在哈利法塔对面的一座高楼上，他们拍摄了一张完美的情侣照。]]></content>
      <categories>
        <category>日常</category>
      </categories>
      <tags>
        <tag>日常</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[纯代码实现侧边栏显示社交按钮组]]></title>
    <url>%2Fposts%2F5508299d%2F</url>
    <content type="text"><![CDATA[其实想要实现这个功能也是挺简单的，有两种办法! 方法1： 纯html代码实现(优点：添加很简单，只需把html代码粘贴到小工具中的文本中即可。缺点：更改相对麻烦）把下面内容改成自己的。 12345678&lt;div class="textwidget"&gt;&lt;a class="tweibo" style="padding-left: 12px;" href="http://wpa.qq.com/msgrd?v=3&amp;amp;uin=你的QQ号&amp;amp;site=qq&amp;amp;menu=yes" target="_blank" rel="external nofollow"&gt;&lt;i class="fa fa-qq"&gt;&lt;/i&gt; 在线服务&lt;/a&gt;&lt;a class="tweibo" style="padding-left: 12px;" href="http://weibo.com/你的微博" target="_blank" rel="external nofollow"&gt;&lt;i class="fa fa-weibo"&gt;&lt;/i&gt; 微博&lt;/a&gt;&lt;a class="tweibo" style="padding-left: 12px;" href="http://t.qq.com/你的企鹅微博" target="_blank" rel="external nofollow"&gt;&lt;i class="fa fa-tencent-weibo"&gt;&lt;/i&gt; 腾讯微博&lt;/a&gt;&lt;a class="rss" style="padding-left: 12px;" href="https://laod.cn/go?url=http://laid.cn/s/你的网址" target="_blank"&gt;&lt;i class="fa fa-paw"&gt;&lt;/i&gt; 百度口碑&lt;/a&gt;&lt;/div&gt; 方法2： 通过funtions增加自定义用户资料，然后通过函数调用。 先加代码到当前主题文件夹下的funtions.php中，代码如下： 12345678//自定义用户资料add_filter( 'user_contactmethods', 'yeziting_add_contact_fields' );function yeziting_add_contact_fields( $contactmethods ) &#123;$contactmethods['qq'] = 'QQ';$contactmethods['qq_weibo'] = '腾讯微博';$contactmethods['sina_weibo'] = '新浪微博';$contactmethods['donate'] = '百度口碑';&#125; 然后再加代码到sidebar.php文件中。代码如下。（修改的话直接进后台的个人资料中填写。QQ直接写QQ号即可。微博：http://weibo.com/你的微博地址。腾讯微博同样如此，百度口碑写自己的网址即。 12345&lt;div class="textwidget"&gt;&lt;a class="tweibo" style="padding-left: 12px;" href="http://wpa.qq.com/msgrd?v=3&amp;amp;uin=&amp;lt;?php the_author_meta( 'qq' );?&amp;gt;&amp;amp;site=qq&amp;amp;menu=yes" target="_blank" rel="external nofollow"&gt;&lt;i class="fa fa-qq"&gt;&lt;/i&gt; QQ交谈&lt;/a&gt; &lt;a class="tweibo" style="padding-left: 12px;" href="&amp;quot;http://weibo.com/&amp;lt;?php"&gt;"target="_blank" rel="external nofollow"&amp;gt;&lt;i class="fa fa-weibo"&gt;&lt;/i&gt; 微博&lt;/a&gt; &lt;a class="tweibo" style="padding-left: 12px;" href="http://t.qq.com/&amp;lt;?php the_author_meta( 'qq_weibo' );?&amp;gt;" target="_blank" rel="external nofollow"&gt;&lt;i class="fa fa-tencent-weibo"&gt;&lt;/i&gt; 腾讯微博&lt;/a&gt; style="padding-left: 12px;" href="http://koubei.baidu.com/s/&lt;!--?php the_author_meta( 'donate' );?--&gt;" target="_blank"&amp;gt;&lt;i class="fa fa-paw"&gt;&lt;/i&gt; 百度口碑&lt;/div&gt; CSS代码： 12345678910.textwidget &#123;padding: 15px;color: #777;&#125;.textwidget a &#123;color: #777;&#125;.textwidget a:hover &#123;color: #45B6F7;&#125;]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>按钮</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Markdown基本语法]]></title>
    <url>%2Fposts%2F5d36ff15%2F</url>
    <content type="text"><![CDATA[特殊字符之所以把特殊字符放到最前面,就是因为Markdown对特殊字符处理不是很友好,很容易出现很奇怪的异常,其实就是因为文章中包含了特殊字符无法编译通过，所以导致Hexo无法渲染 .下面是比较常见的几个: 12345678910111213141516171819202122! &amp;#33; — 惊叹号Exclamation mark” &amp;#34; &amp;quot; 双引号Quotation mark# &amp;#35; — 数字标志Number sign$ &amp;#36; — 美元标志Dollar sign% &amp;#37; — 百分号Percent sign&amp; &amp;#38; &amp;amp; Ampersand‘ &amp;#39; — 单引号Apostrophe( &amp;#40; — 小括号左边部分Left parenthesis) &amp;#41; — 小括号右边部分Right parenthesis* &amp;#42; — 星号Asterisk+ &amp;#43; — 加号Plus sign&lt; &amp;#60; &amp;lt; 小于号Less than= &amp;#61; — 等于符号Equals sign&gt; &amp;#62; &amp;gt; 大于号Greater than? &amp;#63; — 问号Question mark@ &amp;#64; — Commercial at[ &amp;#91; --- 中括号左边部分Left square bracket\ &amp;#92; --- 反斜杠Reverse solidus (backslash)] &amp;#93; — 中括号右边部分Right square bracket&#123; &amp;#123; — 大括号左边部分Left curly brace| &amp;#124; — 竖线Vertical bar&#125; &amp;#125; — 大括号右边部分Right curly brace 特别注意的是小括号 ( ) 大括号 { } ,如果不小心写了,你执行hexo s –debug可能报一些莫名其妙的错误! 更多特殊字符转义的内容 标题在文字前加上#号1234567891011# 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题大标题=小标题- 粗体斜体123*斜体文本* _斜体文本_**粗体文本** __粗体文本__***粗斜体文本*** ___粗斜体文本___ 预览效果：斜体文本 斜体文本粗体文本 粗体文本粗斜体文本 粗斜体文本 链接123456789101112常用链接方法文字链接 [链接名称](https://friendship328.github.io/)网址链接 &lt;https://friendship328.github.io/&gt;高级链接技巧这个链接用 1 作为网址变量 [Google][1].这个链接用 yahoo 作为网址变量 [Yahoo!][yahoo].然后在文档的结尾为变量赋值（网址） [1]: http://www.google.com/ [yahoo]: http://www.yahoo.com/ 预览效果：文字链接 链接名称网址链接 https://friendship328.github.io/ 高级链接技巧这个链接用 1 作为网址变量 Google.这个链接用 yahoo 作为网址变量 Yahoo!. 列表123- 列表文本前使用 [减号+空格]+ 列表文本前使用 [加号+空格]* 列表文本前使用 [星号+空格] 普通有序列表1231. 列表前使用 [数字+空格]2. 我们会自动帮你添加数字7. 不用担心数字不对，显示的时候我们会自动把这行的 7 纠正为 3 列表嵌套12345678910111. 列出所有元素： - 无序列表元素 A 1. 元素 A 的有序子列表 - 前面加四个空格2. 列表里的多段换行： 前面必须加四个空格， 这样换行，整体的格式不会乱3. 列表里引用： &gt; 前面空一行 &gt; 仍然需要在 &gt; 前面加四个空格 引用普通引用12&gt; 引用文本前使用 [大于号+空格]&gt; 折行可以不加，新起一行都要加上哦 引用里嵌套引用123&gt; 最外层引用&gt; &gt; 多一个 &gt; 嵌套一层引用&gt; &gt; &gt; 可以嵌套很多层 引用里嵌套列表123&gt; - 这是引用里嵌套的一个列表&gt; - 还可以有子列表&gt; * 子列表需要从 - 之后延后四个空格开始 图片跟链接的方法区别在于前面加了个感叹号!，这样是不是觉得好记多了呢? 12345678![图片名称](http: //图片地址)当然，你也可以像网址那样对图片网址使用变量这个链接用 1 作为网址变量 [ Google] [ 1].然后在文档的结尾位变量赋值(网址)[1]: http: //www.google.com/logo.png也可以使用 HTML 的图片语法来自定义图片的宽高大小 换行如果另起一行，只需在当前行结尾加 2 个空格 123在当前行的结尾加 2 个空格这行就会新起一行如果是要起一个新段落，只需要空出一行即可。 分隔符如果你有写分割线的习惯，可以新起一行输入三个减号-。当前后都有段落时，请空出一行： 12345前面的段落---后面的段落 小型文本1&lt;small&gt;文本内容&lt;/small&gt; 预览效果：我是正常文字我是小型文字 注释用html的注释，好像只有这样？ 1&lt;!-- 注释 --&gt; 表格123456789| 参数 | 说明 | 默认值 || ------------- |:-------------------:|:------------------:|| host | 远程主机的地址 | || user | 使用者名称 | || root | 远程主机的根目录 | || port | 端口 | 22 || delete | 删除远程主机上的旧文件 | true || verbose | 显示调试信息 | true || ignore_errors | 忽略错误 | false | 预览效果： 参数 说明 默认值 host 远程主机的地址 user 使用者名称 root 远程主机的根目录 port 端口 22 delete 删除远程主机上的旧文件 true verbose 显示调试信息 true ignore_errors 忽略错误 false 最后:还是要注意特殊字符的处理,其他的就是排版样式的问题,特殊字符没处理好,就是Hexo渲染报错.]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo NexT主题配置]]></title>
    <url>%2Fposts%2F5460f326%2F</url>
    <content type="text"><![CDATA[使用NexT主题在 Git Bash 终端执行以下命令： 1$ git clone https://github.com/iissnan/hexo-theme-next themes/next 打开站点配置文件 _config.yml，找到 theme 字段，并将其值更改为 next 1theme: next 我喜欢双栏的故使用 NexT.Pisces 主题，修改主题配置文件 _config.yml的 Schemes 字段的值为： 1scheme: Pisces Next主题宽度调节现在一般都用宽屏显示器，博客页面两侧留白太多，调整一下宽度打开 \themes\next\source\css\_common\components\post\post-expand.styl 文件，找到 1@media (max-width: 767px) 改为 1@media (max-width: 1080px) 打开 \themes\next\source\css\ _variables\base.styl 文件，找到 123$main-desktop = 960px$main-desktop-large = 1200px$content-desktop = 700px 修改 $main-desktop 和 $content-desktop 的数值： 123$main-desktop = 1080px$main-desktop-large = 1200px$content-desktop = 810px Next.Mist 主题的文章宽度至此改完了。如果你用的是 Next.Pisces，还需要继续修改。打开 \themes\next\source\css\_schemes\Pisces\_layout.styl 文件，将第 4 行的 width改为1080px ，修改后如下： 1234.header &#123; position: relative; margin: 0 auto; width: 1080px; 修改文章内链接文本样式将链接文本设置为蓝色，鼠标划过时文字颜色加深，并显示下划线修改文件 themes\next\source\css\_common\components\post\post.styl ，添加如下css样式： 1234567891011// 文章内链接文本样式.post-body p a&#123; color: #0593d3; border-bottom: none; border-bottom: 1px solid #0593d3; &amp;:hover &#123; color: #fc6423; border-bottom: none; border-bottom: 1px solid #fc6423; &#125;&#125; 选择 .post-body 是为了不影响标题，选择 p 是为了不影响首页“阅读全文”的显示样式。 文章底部的那个带#号的标签文章底部的那个带#号的标签，比如#NexT，可以把#换成图标吗，怎么设置?修改模板 layout/_macro/post.swig，搜索 rel=&quot;tag&quot;&gt;#，将 # 换成 &lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt; 首页展示文章动画效果和图片放大镜效果关闭哪改？文章动画效果关闭：主题配置里 Motion: 改为 false 关闭图片放大镜效果: 主题配置里 fancybox: 改为 false hexo背景动态效果和心心把 js 文件 love.js 和 particle.js 放在 \themes\next\source\js\src 文件目录下更新 \themes\next\layout\_layout.swig 文件，在末尾（在前面引用会出现找不到的bug）添加以下 js 引入代码： 1234&lt;!-- 背景动画 --&gt;&lt;script type="text/javascript" src="/js/src/particle.js"&gt;&lt;/script&gt;&lt;!-- 页面点击小红心 --&gt;&lt;script type="text/javascript" src="/js/src/love.js"&gt;&lt;/script&gt; 想设置动画线条颜色可改为： 1&lt;script type="text/javascript" color="255,0,0" opacity="0.3" count="99" src="particle.js"&gt;&lt;/script&gt; 就能显示红色。或者用： 1&lt;script type="text/javascript" src="/js/src/particles.js" count="50" zindex="-2" opacity="1" color="0,104,183"&gt;&lt;/script&gt; 两个JS下载为： 12http://7u2ss1.com1.z0.glb.clouddn.com/love.jshttp://7u2ss1.com1.z0.glb.clouddn.com/particle.js hexo NexT主题首页title的优化更改 index.swig 文件，文件路径是 your-hexo-site\themes\next\layout ，将下面代码 1&#123;% block title %&#125; &#123;&#123; config.title &#125;&#125; &#123;% endblock %&#125; 改成 1&#123;% block title %&#125; &#123;&#123; config.title &#125;&#125; - &#123;&#123; theme.description &#125;&#125; &#123;% endblock %&#125; 这时候你的首页标题会更符合网站名称 - 网站描述这习惯进阶：做了 seo 优化，把关键词也显示在 Title 标题里，可改成 1&#123;% block title %&#125; &#123;&#123; theme.keywords &#125;&#125; - &#123;&#123; config.title &#125;&#125; - &#123;&#123; theme.description &#125;&#125; &#123;% endblock %&#125; 注意：别堆砌关键字，整个标题一般不超过 80 个字符，可以通过chinaz的seo综合查询检查 每篇文章末尾统一添加“本文结束”标记新建 passage-end-tag.swig 文件在路径 \themes\next\layout\_macro 中添加 passage-end-tag.swig 文件，其内容为： 12345&lt;div&gt; &#123;% if not is_index %&#125; &lt;div style="text-align:center;color: #ccc;font-size:14px;"&gt;------本文结束&lt;i class="fa fa-paw"&gt;&lt;/i&gt;感谢阅读------&lt;/div&gt; &#123;% endif %&#125;&lt;/div&gt; 修改 post.swig 文件在 \themes\next\layout\_macro\post.swig 中， post-body 之后， post-footer 之前添加如下代码（post-footer之前两个DIV）： 在主题配置文件中添加字段在主题配置文件 _config.yml 中添加以下字段开启此功能： 123# 文章末尾添加“本文结束”标记passage_end_tag: enabled: true 增加HIGH一下功能在 themes\next\layout\_macro 目录下增加 high.swig 文件，我已改为歌曲循环和多次点击不重复！地址为: 1http://7u2ss1.com1.z0.glb.clouddn.com/high-xunhuan.swig 打开这个地址，复制全部内容，在你本地新建high.swig 文件打开\themes\next\layout\_macro\sidebar.swig文件，打开，在 1234&lt;a href="&#123;&#123; url_for(theme.rss) &#125;&#125;" target="_blank" rel="alternate"&gt; &lt;i class="fa fa-rss"&gt;&lt;/i&gt; RSS&lt;/a&gt; 后边加入： 1&#123;% include 'high.swig' %&#125; 如： 123456789&#123;% if theme.rss %&#125; &lt;div class="feed-link motion-element"&gt; &lt;a href="&#123;&#123; url_for(theme.rss) &#125;&#125;" rel="alternate"&gt; &lt;i class="fa fa-rss"&gt;&lt;/i&gt; RSS &lt;/a&gt; &#123;% include 'high.swig' %&#125; &lt;/div&gt; &#123;% endif %&#125; 接着在主题配置文件 _config.yml ，加入： 12highqilai: enabled: true 然后打开自定义CSS： \themes\next\source\css\_custom\custom.styl 加入 1.feed-link a&#123;display: inline-block;&#125; hexo clean ， hexo g , hexo s 查看效果！主页 High 起来，摇动。改动方法！ 1themes\next\layout\_layout.swig 前添加： 1&lt;link href="http://7u2ss1.com1.z0.glb.clouddn.com/harlem-shake-style.css" rel="stylesheet" type="text/css" /&gt; 地址改为你自己的CSS。失效了不怪！如果只是想当播放器听歌的话改 high.swig 文件内容为： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162&lt;a title="收藏到书签，偶尔High一下^_^" rel="alternate" class="mw-harlem_shake_slow wobble shake" href='javascript:( /* * Copyright (C) 2015 Rocko (rocko.xyz) &lt;rocko.zxp@gmail.com&gt; * * Licensed under the Apache License, Version 2.0 (the "License"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ function go() &#123; var songs = [ "http://7u2ss1.com1.z0.glb.clouddn.com/%E9%AB%98%E6%A2%A8%E5%BA%B7%E6%B2%BB%20-%20%E5%AD%A4%E7%8B%AC.mp3", "http://7u2ss1.com1.z0.glb.clouddn.com/one%20by%20one.mp3", "http://7u2ss1.com1.z0.glb.clouddn.com/Enya%20-%20Only%20Time.mp3", "http://7u2ss1.com1.z0.glb.clouddn.com/Enya%20-%20May%20It%20Be.mp3", "......" ]; function S() &#123; var e = document.getElementById("audio_element_id"); if(e != null)&#123; var index = parseInt(e.getAttribute("curSongIndex")); if(index &gt; songs.length - 2) &#123; index = 0; &#125; else &#123; index++; &#125; e.setAttribute("curSongIndex", index); &#125; e.src = i; e.play() &#125; function initAudioEle() &#123; var e = document.getElementById("audio_element_id"); if(e === null)&#123; e = document.createElement("audio"); e.setAttribute("curSongIndex", 0); e.id = "audio_element_id"; e.loop = false; e.bgcolor = 0; e.innerHTML = " &lt;p&gt;If you are reading this, it is because your browser does not support the audio element. We recommend that you get a new browser.&lt;/p&gt; &lt;p&gt;"; document.body.appendChild(e); e.addEventListener("ended", function() &#123; go(); &#125;, true); &#125; &#125; initAudioEle(); var curSongIndex = parseInt(document.getElementById("audio_element_id").getAttribute("curSongIndex")); var i = songs[curSongIndex]; S(); &#125;)()'&gt; &lt;i class="fa fa-music"&gt;&lt;/i&gt; 听音乐&lt;/a&gt; 作者头像变成圆形打开自定义CSS： \themes\next\source\css\_custom\custom.styl 加入 1234567.site-author-image &#123; border-radius: 100%; padding: 2px; border: 2px dashed #fff; animation: cycle 2s 0.5s forwards; transition: border-radius 2s;&#125; 博主名字号大小,也在 custom.styl 文件: 123.site-author-name &#123; font-size: 16px;&#125; 博文置顶修改 hexo-generator-index 插件替换文件：node_modules/hexo-generator-index/lib/generator.js为： 12345678910111213141516171819202122232425262728'use strict';var pagination = require('hexo-pagination');module.exports = function(locals)&#123; var config = this.config; var posts = locals.posts; posts.data = posts.data.sort(function(a, b) &#123; if(a.top &amp;&amp; b.top) &#123; // 两篇文章top都有定义 if(a.top == b.top) return b.date - a.date; // 若top值一样则按照文章日期降序排 else return b.top - a.top; // 否则按照top值降序排 &#125; else if(a.top &amp;&amp; !b.top) &#123; // 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233） return -1; &#125; else if(!a.top &amp;&amp; b.top) &#123; return 1; &#125; else return b.date - a.date; // 都没定义按照文章日期降序排 &#125;); var paginationDir = config.pagination_dir || 'page'; return pagination('', posts, &#123; perPage: config.index_generator.per_page, layout: ['index', 'archive'], format: paginationDir + '/%d/', data: &#123; __index: true &#125; &#125;);&#125;; 设置文章置顶在文章 Front-matter 中添加 top 值，数值越大文章越靠前，如： 1234567---title: Hexo NexT主题配置tags: hexocategories: hexodate: 2016-12-27 12:10:15top: 5--- NexT主题自定义面页无序列表样式打开自定义CSS： \themes\next\source\css\_custom\custom.styl 加入： 123ul &#123;list-style-type: circle; // 空心圆，实心圆为 disc&#125; 原文地址：Hexo+NexT主题配置备忘]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo安装教程]]></title>
    <url>%2Fposts%2F986095e4%2F</url>
    <content type="text"><![CDATA[安装node.js官方下载地址 设置npm淘宝镜像站npm默认的源的下载速度可能很慢，建议使用淘宝镜像替换 执行下面的命令，将npm的源设置成淘宝镜像站 1npm config set registry "https://registry.npm.taobao.org" 申请Github账号Github注册页面 创建博客仓库注意! 仓库名应该为：用户名.github.io。比如，我的仓库名是：friendship328.github.io 安装gitgit下载地址 配置ssh打开git bash终端设置user.name和user.email 12git config --global user.name "你的GitHub用户名"git config --global user.email "你的GitHub注册邮箱" 生成ssh密匙 1ssh-keygen -t rsa -C "你的GitHub注册邮箱" 此时，在用户文件夹下就会有一个新的文件夹.ssh，里面有刚刚创建的ssh密钥文件id_rsa和id_rsa.pub 将公匙添加到github上用户头像→Settings→SSH and GPG keys→New SSH key→将id_rsa.pub中的内容复制到Key文本框中，然后点击Add SSH key(添加SSH)按钮 安装hexo执行以下命令安装hexo1234567891011121314151617# 安装hexonpm install hexo-cli g# 初始化博客文件夹hexo init blog# 切换到该路径cd blog# 安装hexo的扩展插件npm install# 安装其它插件npm install hexo-server --savenpm install hexo-admin --savenpm install hexo-generator-archive --savenpm install hexo-generator-feed --savenpm install hexo-generator-search --savenpm install hexo-generator-tag --savenpm install hexo-deployer-git --savenpm install hexo-generator-sitemap --save 初探hexo第一次使用hexo，在本地创建服务器使用 1234# 生成静态页面hexo generate# 开启本地服务器hexo s 打开浏览器，地址栏中输入：http://localhost:4000/, 应该可以看见刚刚创建的博客了 问题：为什么访问 http://localhost:4000/ 无反应？解决方法：可能是由于端口问题引起的。使用Ctrl+C中断本地服务，使用命令hexo s -p 5000重新开启本地服务，访问 http://localhost:5000/ 可以看到博客页面了 将hexo博客部署到github上修改配置文件blog/_config.yml，修改deploy项的内容，如下所示： 123456789# Deployment 注释## Docs: https://hexo.io/docs/deployment.htmldeploy: # 类型 type: git # 仓库 repo: git@github.com:friendship328/friendship328.github.io.git # 分支 branch: master 注意：type: git中的冒号后面由空格注意：将git@github.com:friendship328/friendship328.github.io.git 中的用户名换成自己的用户名 git@github.com:github_username/github_username.github.io.git 部署hexo输入下面的命令将hexo博客部署到github中： 123456# 清空静态页面hexo clean# 生成静态页面hexo generate# 部署hexo deploy 打开网页，输入http://github_username.github.io，打开github上托管的博客。如我的博客地址是：http://friendship328.github.io hexo命令缩写hexo支持命令缩写，如下所示。hexo g等价于hexo generate 1234hexo g：hexo generatehexo c：hexo cleanhexo s：hexo serverhexo d：hexo deploy hexo组合命令1234# 清除、生成、启动hexo clean &amp;&amp; hexo g -s# 清除、生成、部署hexo clean &amp;&amp; hexo g -d 常见问题hexo deploy没有反应？修改配置文件：_config.yml时，冒号后面没加空格 hexo s 网站打不开？端口占用，换个端口就好了。执行命令hexo s -p 5000，并在浏览器地址栏输入 http://localhost:5000 回车访问 如何换主题？ 将主题下载后，放到themes文件夹中即可。例如，下面命令安装next主题： 1git clone https://github.com/iissnan/hexo-theme-next themes/next 原博客地址：hexo教程系列——hexo安装教程]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo seo优化]]></title>
    <url>%2Fposts%2Ffe6afcc5%2F</url>
    <content type="text"><![CDATA[Next主题自带SEO优化选项hexo博客next提供了seo优化选项，在主题配置文件_config.yml中有个选项是seo，默认是false，改成true即开启了seo优化，会进行一些seo优化，如改变博文title等，然后相同文件下有个关键字选项keywords，填充上，写博文时最好每篇博文都加上keywords。hexo的根目录配置文件_config.yml中title、subtitle和description也建议填上。开启seo优化后可以查看网页源码跟之前有什么不同。 文章标题转换唯一链接使用插件hexo-abbrlink可以做到，安装： 1$ npm install hexo-abbrlink --save 然后hexo的根目录配置文件_config.yml中修改： 1234permalink: :abbrlink/abbrlink: alg: crc32 # 算法：crc16(default) and crc32 rep: dec # 进制：dec(default) and hex 这样就确保了博文链接的唯一化，只要不修改md文件的abbrlink的值，url就永久不会改变。如此md文件名和文件内容也可以随便改了。这样也有利于SEO优化。 给出站链接添加 “nofollow” 标签nofollow标签是由谷歌领头创新的一个“反垃圾链接”的标签，并被百度、yahoo等各大搜索引擎广泛支持，引用nofollow标签的目的是：用于指示搜索引擎不要追踪（即抓取）网页上的带有nofollow属性的任何出站链接，以减少垃圾链接的分散网站权重。 Hexo 的 Next 主题需要改以下几个地方： 找到footer.swig，路径在your-hexo-site\themes\next\layout\_partials，将下面代码中的a标签加上rel=&quot;external nofollow&quot;属性； 1&#123;&#123; __('footer.powered', '&lt;a class="theme-link" href="http://hexo.io"&gt;Hexo&lt;/a&gt;') &#125;&#125; 1&lt;a class="theme-link" href="https://github.com/iissnan/hexo-theme-next"&gt; 修改sidebar.swig文件，路径在your-hexo-site\themes\next\layout_macro，将下面代码中的a标签加上rel=&quot;external nofollow&quot;属性；1&lt;a href="&#123;&#123; link &#125;&#125;" target="_blank"&gt;&#123;&#123; name &#125;&#125;&lt;/a&gt; 1&lt;a href="http://creativecommons.org/licenses/&#123;&#123; theme.creative_commons &#125;&#125;/4.0" class="cc-opacity" target="_blank"&gt; 让百度收录你的站点我们首先要做的就是让各大搜索引擎收录你的站点，我们在刚建站的时候各个搜索引擎是没有收录我们网站的，在搜索引擎中输入site:&lt;域名&gt;,来看我们的网站有没有被百度收录。我们可以直接点击下面的“网址提交”来提交我们的网站. 登录百度站长平台，只要有百度旗下的账号就可以登录，登录成功之后在站点管理中点击添加网站然后输入你的站点地址，建议输入的网站为www开头的，不要输入github.io的，因为github是不允许百度的spider爬取github上的内容的，所以如果想让你的站点被百度收录，只能使用自己购买的域名。或者用国内的coding。 选择完网站的类型之后需要验证网站的所有权，验证网站所有权的方式有三种：文件验证、html标签验证、cname解析验证。注意：使用文件验证文件存放的位置需要放在source文件夹下，如果是html文件那么hexo就会将其编译，所以必须要加上的layout:false，这样就不会被hexo编译。（如果验证文件是txt格式的就不需要），其他两种方式也是很简单的。我个人推荐文件验证和cname验证，cname验证最为简单，只需加一条解析就好~ 给站点添加sitemap我们需要使用npm自动生成网站的sitemap，然后将生成的sitemap提交到百度和其他搜索引擎 安装sitemap插件12npm install hexo-generator-sitemap --savenpm install hexo-generator-baidu-sitemap --save 在站点配置文件_config.yml中添加以下代码12345# 自动生成sitemapsitemap:path: sitemap.xmlbaidusitemap:path: baidusitemap.xml 修改站点配置文件_config.yml123# URL## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'url: http://yoursite Hexo编译12hexo cleanhexo g 生成sitemap.xml和baidusitemap.xml，重启hexo通过 http://localhost:4000/baidusitemap.xml 和 http://localhost:4000/sitemap.xml 查看该文件是否生成，其中sitemap.xml文件是搜索引擎通用的文件，baidusitemap.xml是百度专用的sitemap文件。 提交sitemap到站长平台有两种提交方式，自动提交和手动提交，自动提交又分为主动推送、自动推送和sitemap. 如何选择链接提交方式主动推送：最为快速的提交方式，推荐您将站点当天新产出链接立即通过此方式推送给百度，以保证新链接可以及时被百度收录。 自动推送：最为便捷的提交方式，请将自动推送的JS代码部署在站点的每一个页面源代码中，部署代码的页面在每次被浏览时，链接会被自动推送给百度。可以与主动推送配合使用。 sitemap：您可以定期将网站链接放到sitemap中，然后将sitemap提交给百度。百度会周期性的抓取检查您提交的sitemap，对其中的链接进行处理，但收录速度慢于主动推送。 手动提交：一次性提交链接给百度，可以使用此种方式。 从效率上来：主动推送&gt;自动推送&gt;sitemap 主动推送安装插件 1npm install hexo-baidu-url-submit --save 然后再根目录的配置文件中新增字段 12345baidu_url_submit: count: 100 # 提交最新的一个链接 host: www.cherryblog.site # 在百度站长平台中注册的域名 token: 8OGYpxowYnhgVsUM # 请注意这是您的秘钥， 所以请不要把博客源代码发布在公众仓库里! path: baidu_urls.txt # 文本文档的地址， 新链接会保存在此文本文档里 在加入新的deploye 12deploy: - type:baidu_url_submitter 这样执行hexo deploy的时候，新的链接就会被推送了 自动推送在主题配置文件下设置,将baidu_push设置为true： 12# Enable baidu push so that the blog will push the url to baidu automatically which is very helpful for SEObaidu_push: true 然后就会将一下代码自动推送到百度，位置是themes\next\layout_scripts\baidu_push.swig,这样每次访问博客中的页面就会自动向百度提交sitemap 12345678910111213141516&#123;% if theme.baidu_push %&#125;&lt;script&gt;(function()&#123; var bp = document.createElement('script'); var curProtocol = window.location.protocol.split(':')[0]; if (curProtocol === 'https') &#123; bp.src = 'https://zz.bdstatic.com/linksubmit/push.js'; &#125; else &#123; bp.src = 'http://push.zhanzhang.baidu.com/push.js'; &#125; var s = document.getElementsByTagName("script")[0]; s.parentNode.insertBefore(bp, s);&#125;)();&lt;/script&gt;&#123;% endif %&#125; 添加蜘蛛协议 robots新建robots.txt文件，添加以下文件内容，把robots.txt放在hexo站点的source文件下123456789101112# hexo robots.txtUser-agent: * Allow: /Allow: /archives/Disallow: /vendors/Disallow: /js/Disallow: /css/Disallow: /fonts/Disallow: /vendors/Disallow: /fancybox/Sitemap: 域名/sitemap.xmlSitemap: 域名/baidusitemap.xml 然后去百度站长平台检测robots文件看看有没有生效 hexo目录结构默认目录结构：1234567891011.├── .deploy├── public├── scaffolds├── scripts├── source| ├── _drafts| └── _posts├── themes├── _config.yml└── package.json deploy：执行hexo deploy命令部署到GitHub上的内容目录 public：执行hexo generate命令，输出的静态网页内容目录 scaffolds：layout模板文件目录，其中的md文件可以添加编辑 scripts：扩展脚本目录，这里可以自定义一些javascript脚本 source：文章源码目录，该目录下的markdown和html文件均会被hexo处理。该页面对应repo的根目录，404文件、favicon.ico文件，CNAME文件等都应该放这里，该目录下可新建页面目录 drafts：草稿文章 posts：发布文章 themes：主题文件目录 _config.yml：全局配置文件，大多数的设置都在这里 package.json：应用程序数据，指明hexo的版本等信息，类似于一般软件中的关于按钮 主题结构：12345678910111213141516171819202122232425262728293031323334353637├── .github #git信息├── languages #多语言| ├── default.yml #默认语言| └── zh-Hans.yml #简体中文| └── zh-tw.yml #繁体中文├── layout #布局，根目录下的*.ejs文件是对主页，分页，存档等的控制| ├── _custom #可以自己修改的模板，覆盖原有模板| | ├── _header.swig #头部样式| | ├── _sidebar.swig #侧边栏样式| ├── _macro #可以自己修改的模板，覆盖原有模板| | ├── post.swig #文章模板| | ├── reward.swig #打赏模板| | ├── sidebar.swig #侧边栏模板| ├── _partial #局部的布局| | ├── head #头部模板| | ├── search #搜索模板| | ├── share #分享模板| ├── _script #局部的布局| ├── _third-party #第三方模板| ├── _layout.swig #主页面模板| ├── index.swig #主页面模板| ├── page #页面模板| └── tag.swig #tag模板├── scripts #script源码| ├── tags #tags的script源码| ├── marge.js #页面模板├── source #源码| ├── css #css源码| | ├── _common #*.styl基础css| | ├── _custom #*.styl局部css| | └── _mixins #mixins的css| ├── fonts #字体| ├── images #图片| ├── uploads #添加的文件| └── js #javascript源代码├── _config.yml #主题配置文件└── README.md #用GitHub的都知道 域名解析 git A记录的记录值就是ip地址，github(官方文档)提供了两个IP地址，192.30.252.153和192.30.252.154，这两个IP地址为github的服务器地址，两个都要填上. 解析记录设置两个www和@，线路就默认就行了，CNAME记录值填你的github博客网址 在自己的Hexo\source目录下创建一个CNAME文件，注意不带后缀的，打开后，里面写入自己的域名地址，如：www.xxxxx.com hexo-wordcount阅读时长安装wordcount插件 1npm install hexo-wordcount --save 主要功能：字数统计:WordCount阅读时长预计:Min2Read总字数统计: TotalCount 安装完插件之后在主题的配置文件中开启该功能就可以~,如果仅仅只是打开开关，部署之后会发现文章的【字数统计】和【阅读时长】后面没有对应的xxx字，xx分钟等字样，只有光秃秃的数字在那里. 解决方案 找到Blog\themes\next\layout\_macro\post.swig 文件 字数统计 123&lt;span title="&#123;&#123; __('post.wordcount') &#125;&#125;"&gt; &#123;&#123; wordcount(post.content) &#125;&#125;&lt;/span&gt; 123&lt;span title="&#123;&#123; __('post.wordcount') &#125;&#125;"&gt; &#123;&#123; wordcount(post.content) &#125;&#125; 字 &lt;/span&gt; 阅读时长 123&lt;span title="&#123;&#123; __('post.min2read') &#125;&#125;"&gt; &#123;&#123; min2read(post.content) &#125;&#125; &lt;/span&gt; 添加 “分钟”到min2read(post.content) }} 后面，修改后为： 123&lt;span title="&#123;&#123; __('post.min2read') &#125;&#125;"&gt; &#123;&#123; min2read(post.content) &#125;&#125; 分钟 &lt;/span&gt; 添加 “字”到wordcount(post.content) }} 后面，修改后为： 再次运行，就能得到正常的如“字数统计 100字”“阅读时长 6分钟”这样的样式了 添加动态titile —崩溃欺骗新建js文件并添加如下代码，放在\themes\next\source\js\src文件目录下引用 1234567891011121314151617&lt;!--崩溃欺骗--&gt;var OriginTitile = document.title; var titleTime; document.addEventListener('visibilitychange', function () &#123; if (document.hidden) &#123; $('[rel="icon"]').attr('href', "/img/TEP.ico"); document.title = '╭(°A°`)╮ 页面崩溃啦 ~ | 量子广告！'; clearTimeout(titleTime); &#125; else &#123; $('[rel="icon"]').attr('href', "/favicon.ico"); document.title = '(ฅ&gt;ω&lt;*ฅ) 噫又好了~' + OriginTitile; titleTime = setTimeout(function () &#123; document.title = OriginTitile; &#125;, 2000); &#125; &#125;);]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Blizzard]]></title>
    <url>%2Fposts%2Fc454c54e%2F</url>
    <content type="text"><![CDATA[var dplayer0 = new DPlayer({"element":document.getElementById("dplayer0"),"autoplay":0,"theme":"#FADFA3","loop":1,"video":{"url":"http://oybkqi1gi.bkt.clouddn.com/%E6%9A%B4%E9%9B%AA%E6%B8%B8%E6%88%8FCG.mp4","pic":"http://oybkqi1gi.bkt.clouddn.com/12.png"}});]]></content>
      <categories>
        <category>游戏</category>
      </categories>
      <tags>
        <tag>Blizzard</tag>
        <tag>CG</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[css3实现图片木桶布局]]></title>
    <url>%2Fposts%2F6eb4240a%2F</url>
    <content type="text"><![CDATA[思路： 1、容器flex布局 2、图片定高、超出换行 3、图片都设置 flex-grow: 1; 以充满整行 4、图片都设置 object-fit: cover; 以解决图片变形 5、容器 :after 伪类 设置 flex-grow: 9999; 且值足够高 以解决最后一行图片数量少时仍然充满整行过于扁长 实现效果： html代码： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455&lt;!DOCTYPE html&gt; &lt;script&gt; window.navigator.appVersion.indexOf('Trident') != -1 &amp;&amp; alert('请用谷歌或火狐新版打开！'); &lt;/script&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;title&gt;&lt;/title&gt; &lt;style type="text/css"&gt; *&#123; margin: 0; &#125; body&#123; padding: 50px 0; overflow-x: hidden; &#125; .wrap&#123; display: flex; flex-wrap: wrap; &#125; .wrap img&#123; margin: 3px; padding: 5px; height: 200px; background: #ccc; flex-grow: 1; object-fit: cover; transition: .3s; &#125; .wrap:after&#123; display: block; content: ''; flex-grow: 9999; &#125; .wrap img:hover&#123; transform: scale(1.2); box-shadow: 0 0 20px #fff; z-index: 9999; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div class="wrap"&gt;&lt;/div&gt; &lt;script&gt; var wrap = document.querySelector('.wrap'); var src = ['//cdn.attach.qdfuns.com/notes/pics/201710/13/093715yf2jt47tttj9lyfj.jpg','//cdn.attach.qdfuns.com/notes/pics/201710/13/092835ebbkfzjtb4okwj2b.jpg','//cdn.attach.qdfuns.com/notes/pics/201710/13/092835beqzk6kyjkbwr5bw.jpg','//cdn.attach.qdfuns.com/notes/pics/201710/13/092835nshkii0i2k0dsikn.jpg','//cdn.attach.qdfuns.com/notes/pics/201710/13/093653k6ztcd7x7czebkfh.jpg'] for(var i=0; i&lt;Math.floor(Math.random()*10+30); i++)&#123; var img = document.createElement('img'); img.src = src[Math.floor(Math.random()*5)]; wrap.appendChild(img); &#125; &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>css3</tag>
        <tag>布局</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[css小细节总结]]></title>
    <url>%2Fposts%2Fb565c126%2F</url>
    <content type="text"><![CDATA[max-width 防止图片撑破容器1234 img &#123; display:inline-block; max-width: 100%;&#125; pointer-event 禁用事件,该属性可以做以下事：阻止任何点击动作的执行;使链接显示为默认光标（cursor:default）;阻止触发hover和active状态;阻止JavaScript点击事件的触发; 12//使用该类，任何点击事件将无效.disabled &#123; pointer-events: none; &#125; overflow 清楚浮动overflow除了定义溢出元素内容区的内容会如何处理外，还可以创建块格式化上下文，清除浮动。 1234&lt;div class="clearfix"&gt; &lt;div class="left"&gt;left&lt;/div&gt; &lt;div class="right"&gt;right&lt;/div&gt;&lt;/div&gt; 123.clearfix &#123; overflow: hidden;&#125; user-select 禁用文本选中IE6-9不支持该属性，可以通过给body添加onselectstart=&quot;return false;&quot;的内联JavaScript语句搞定。 123body&#123; user-select: none; //页面中的文本不能被选中&#125; caret-color 自定义光标的样式123input,textarea,[contenteditable] &#123; caret-color: red;&#125; table-layout 控制表格单元格宽度,由于表格单元格的宽度根据其内容进行调整，也许你设置了表格的宽度，但是不起作用；刨根揭底，是因为表格有个叫做table-layout的属性，其浏览器默认值是auto在作怪。当我们把这个值设置为fixed的时候，给th/td标签设置的宽度就起作用了。 1234table &#123; table-layout: fixed; width: 100%;&#125; :valid :invalid 做表单及时验证.:required 伪类指定具有required 属性的表单元素;:valid 伪类指定一个通过匹配正确的所要求的表单元素;:invalid 伪类指定一个不匹配指定要求的表单元素; 12345678910111213141516171819202122&lt;div class="container"&gt; &lt;div class="row" style="margin-top: 2rem;"&gt; &lt;form&gt; &lt;div class="form-group"&gt; &lt;label&gt;name&lt;/label&gt; &lt;input type="text" required placeholder="请输入名称"&gt; &lt;/div&gt; &lt;div class="form-group"&gt; &lt;label&gt;email&lt;/label&gt; &lt;input type="email" required placeholder="请输入邮箱"&gt; &lt;/div&gt; &lt;div class="form-group"&gt; &lt;label&gt;homepage&lt;/label&gt; &lt;input type="url" placeholder="请输入博客url"&gt; &lt;/div&gt; &lt;div class="form-group"&gt; &lt;label&gt;Comments&lt;/label&gt; &lt;textarea required&gt;&lt;/textarea&gt; &lt;/div&gt; &lt;/form&gt; &lt;/div&gt; &lt;/div&gt; 12345678910111213141516171819202122232425262728293031.form-group &#123; width: 32rem; padding: 1rem; border: 1px solid transparent;&#125;.form-group：hover&#123; border-color: #eee; transition: border .2s;&#125;.form-group label &#123; display: block; font-weight: normal;&#125;.form-group input,.form-group textarea &#123; display: block; width: 100%; line-height: 2rem; padding: .5rem .5rem .5rem 1rem; border: 1px solid #ccc; outline: none;&#125;.form-group input:valid ,.form-group textarea:valid &#123; border-color: #429032; box-shadow: inset 5px 0 0 #429032;&#125;.form-group input:invalid ,.form-group textarea:invalid &#123; border-color: #D61D1D; box-shadow: inset 5px 0 0 #D61D1D;&#125; :target 实现折叠面板1234567891011121314151617181920212223&lt;div class="container"&gt; &lt;div class="row" style="margin-top: 2rem;"&gt; &lt;div class="t-collapse"&gt;&lt;a class="collapse-target" href="#modal1"&gt;target 1&lt;/a&gt; &lt;div class="collapse-body" id="modal1"&gt; &lt;a class="collapse-close" href="#"&gt;target 1&lt;/a&gt; &lt;p&gt; css3 明确规定了伪类用一个冒号:来表示，而伪元素则用两个冒号::来表示。 伪类更多的定义的是状态，如:hover，或者说是一个可以使用CSS进行修饰的特定的特殊元素，如:first-child 常见伪类：:hover :active :focus :visited :link :lang :first-child :last-child :not &lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="t-collapse"&gt;&lt;a class="collapse-target" href="#modal2"&gt;target 2&lt;/a&gt; &lt;div class="collapse-body" id="modal2"&gt; &lt;a class="collapse-close" href="#"&gt;target 2&lt;/a&gt; &lt;p&gt; 伪元素简单来说就是不存在于DOM文档树中的虚拟的元素，它们和HTML元素一样，但是你又无法使用JavaScript去获取，如:before 常见伪元素：::before ::after ::first-letter ::first-line &lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; 1234567891011121314151617181920212223242526272829303132333435363738.t-collapse &#123; border: 1px solid #ccc; margin-top: -1px; &amp;:first-child &#123; margin-top: 0; &#125; .collapse-target,.collapse-close &#123; cursor: pointer; height: 3rem; line-height: 2rem; padding: .5rem 2rem; text-decoration: none; user-select: none; background: #eee; &#125; &gt;.collapse-target &#123; display: block; &#125; &gt;.collapse-body &#123; position: relative; display: none; padding: 2rem; .collapse-close &#123; display: none; position: absolute; top: -3rem; width: 100%; left: 0; &#125; &amp;:target &#123; display: block; .collapse-close &#123; display: block; border-bottom: 1px solid #ddd; &#125; &#125; &#125;&#125; :not 排除其他选择器用以设置表单元素在readonly 和 disabled状态之外的hover等状态，以便于当元素在readonly 和 disabled时，元素不具有hover状态。 12345678910111213@mixin buttonStyle ($border, $background, $color, $hoverBorder, $hoverBackground, $hoverColor) &#123; color: $color; border-color: $border; background-color: $background; &amp;:not(.readonly):not([readonly]):not(.disabled):not([disabled]) &#123; &amp;:hover, &amp;:active &#123; color: $hoverColor; border-color: $hoverBorder; background-color: $hoverBackground; &#125; &#125;&#125; :nth-child(even/odd) 实现隔行变色123456789101112ul &#123; &amp;.odd &#123; &gt;li:nth-child(odd) &#123; background: red; &#125; &#125; &amp;.even &#123; &gt;li:nth-child(even) &#123; background: green; &#125; &#125;&#125; ::selection 美化选中文本1234::selection&#123; color: #fff; background-color: #6bc30d;&#125; ::placeholder 美化占位符123456789input::-webkit-input-placeholder&#123; color: #f00;&#125;input::-moz-placeholder&#123; color: #f00;&#125;input:-ms-input-placeholder&#123; color: #f00;&#125; ::first-letter 实现段落首字下沉12345p::first-letter&#123; font-size: 6em; line-height: 1; float: left;&#125; ::first-line 特殊标记段落第一行123p::first-line&#123; color: red&#125; font-size:0 清除间距123456&lt;div class="items"&gt; &lt;div class="item"&gt;1&lt;/div&gt; &lt;div class="item"&gt;2&lt;/div&gt; &lt;div class="item"&gt;3&lt;/div&gt; &lt;div class="item"&gt;4&lt;/div&gt;&lt;/div&gt; 12345678910111213141516*&#123; box-sizing: border-box;&#125;.items &#123; font-size: 0; &gt; .item &#123; display: inline-block; width: 25%; height: 50px; border: 1px solid #ccc; text-align: center; line-height: 50px; background-color: #eee; font-size: 16px; //不要忘了给子元素设置字号 &#125;&#125;]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>css3</tag>
      </tags>
  </entry>
</search>
